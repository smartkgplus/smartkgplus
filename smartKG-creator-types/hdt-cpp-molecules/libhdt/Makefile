# Makefile.in generated by automake 1.15.1 from Makefile.am.
# libhdt/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2017 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.






am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/hdt
pkgincludedir = $(includedir)/hdt
pkglibdir = $(libdir)/hdt
pkglibexecdir = $(libexecdir)/hdt
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
am__append_1 = -DHAVE_CDS -I$(top_builddir)/libcds/include
am__append_2 = $(top_builddir)/libcds/libcds.la
subdir = libhdt
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/00gnulib.m4 \
	$(top_srcdir)/m4/ax_cxx_compile_stdcxx.m4 \
	$(top_srcdir)/m4/ax_cxx_compile_stdcxx_11.m4 \
	$(top_srcdir)/m4/gnulib-common.m4 \
	$(top_srcdir)/m4/gnulib-comp.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/pkg.m4 $(top_srcdir)/m4/warnings.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(include_HEADERS) \
	$(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/build/config.h
CONFIG_CLEAN_FILES = hdt.pc
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(pkgconfigdir)" \
	"$(DESTDIR)$(includedir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
libhdt_la_DEPENDENCIES = $(am__append_2)
am__dirstamp = $(am__leading_dot)dirstamp
am_libhdt_la_OBJECTS = src/bitsequence/libhdt_la-BitSequence375.lo \
	src/dictionary/libhdt_la-FourSectionDictionary.lo \
	src/dictionary/libhdt_la-KyotoDictionary.lo \
	src/dictionary/libhdt_la-LiteralDictionary.lo \
	src/dictionary/libhdt_la-PlainDictionary.lo \
	src/hdt/libhdt_la-BasicHDT.lo \
	src/hdt/libhdt_la-BasicModifiableHDT.lo \
	src/hdt/libhdt_la-ControlInformation.lo \
	src/hdt/libhdt_la-HDTFactory.lo \
	src/hdt/libhdt_la-HDTManager.lo \
	src/hdt/libhdt_la-HDTSpecification.lo \
	src/hdt/libhdt_la-TripleIDStringIterator.lo \
	src/hdt/libhdt_la-hdt_document.lo \
	src/header/libhdt_la-PlainHeader.lo \
	src/huffman/libhdt_la-huff.lo src/huffman/libhdt_la-Huffman.lo \
	src/libdcs/libhdt_la-CSD_Cache2.lo \
	src/libdcs/libhdt_la-CSD_Cache.lo src/libdcs/libhdt_la-CSD.lo \
	src/libdcs/libhdt_la-CSD_FMIndex.lo \
	src/libdcs/libhdt_la-CSD_HTFC.lo \
	src/libdcs/libhdt_la-CSD_PFC.lo src/libdcs/libhdt_la-VByte.lo \
	src/libdcs/fmindex/libhdt_la-SSA.lo \
	src/libdcs/fmindex/libhdt_la-SuffixArray.lo \
	src/rdf/libhdt_la-RDFParser.lo \
	src/rdf/libhdt_la-RDFParserNtriples.lo \
	src/rdf/libhdt_la-RDFParserSerd.lo \
	src/rdf/libhdt_la-RDFSerializer.lo \
	src/rdf/libhdt_la-RDFSerializerNTriples.lo \
	src/rdf/libhdt_la-RDFSerializerSerd.lo \
	src/sequence/libhdt_la-AdjacencyList.lo \
	src/sequence/libhdt_la-ArraySequence.lo \
	src/sequence/libhdt_la-HuffmanSequence.lo \
	src/sequence/libhdt_la-IntSequence.lo \
	src/sequence/libhdt_la-LogSequence2.lo \
	src/sequence/libhdt_la-LogSequence.lo \
	src/sequence/libhdt_la-WaveletSequence.lo \
	src/sparql/libhdt_la-IndexJoinBinding.lo \
	src/sparql/libhdt_la-JoinAlgorithms.lo \
	src/sparql/libhdt_la-MergeJoinBinding.lo \
	src/sparql/libhdt_la-QueryProcessor.lo \
	src/sparql/libhdt_la-SortBinding.lo \
	src/sparql/libhdt_la-TriplePatternBinding.lo \
	src/triples/libhdt_la-BitmapTriples.lo \
	src/triples/libhdt_la-BitmapTriplesIterators.lo \
	src/triples/libhdt_la-PlainTriples.lo \
	src/triples/libhdt_la-predicateindex.lo \
	src/triples/libhdt_la-TripleIterators.lo \
	src/triples/libhdt_la-TripleListDisk.lo \
	src/triples/libhdt_la-TripleOrderConvert.lo \
	src/triples/libhdt_la-TriplesComparator.lo \
	src/triples/libhdt_la-TriplesKyoto.lo \
	src/triples/libhdt_la-TriplesList.lo \
	src/util/libhdt_la-bitutil.lo src/util/libhdt_la-crc16.lo \
	src/util/libhdt_la-crc32.lo src/util/libhdt_la-crc8.lo \
	src/util/libhdt_la-filemap.lo src/util/libhdt_la-fileUtil.lo \
	src/util/libhdt_la-propertyutil.lo \
	src/util/libhdt_la-StopWatch.lo src/util/libhdt_la-getopt.lo \
	third/libhdt_la-gzstream.lo
libhdt_la_OBJECTS = $(am_libhdt_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
libhdt_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(libhdt_la_LDFLAGS) $(LDFLAGS) -o $@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)/build
depcomp = $(SHELL) $(top_srcdir)/build/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(libhdt_la_SOURCES)
DIST_SOURCES = $(libhdt_la_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
DATA = $(pkgconfig_DATA)
HEADERS = $(include_HEADERS)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	distdir
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
am__DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/hdt.pc.in \
	$(top_srcdir)/build/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = ${SHELL} /home/fernandez/smartKG-creator-types/hdt-cpp-molecules/build/missing aclocal-1.15
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AR = ar
ARFLAGS = cru
AUTOCONF = ${SHELL} /home/fernandez/smartKG-creator-types/hdt-cpp-molecules/build/missing autoconf
AUTOHEADER = ${SHELL} /home/fernandez/smartKG-creator-types/hdt-cpp-molecules/build/missing autoheader
AUTOMAKE = ${SHELL} /home/fernandez/smartKG-creator-types/hdt-cpp-molecules/build/missing automake-1.15
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS =  -g -O2 -std=c++11
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
EXTRAFLAGS =  -DHAVE_LIBZ -DHAVE_SERD
FGREP = /bin/grep -F
GREP = /bin/grep
HAVE_CXX11 = 1
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
KYOTO_CFLAGS = 
KYOTO_LIBS = 
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBGNU_LIBDEPS = 
LIBGNU_LTLIBDEPS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAKEINFO = ${SHELL} /home/fernandez/smartKG-creator-types/hdt-cpp-molecules/build/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = hdt
PACKAGE_BUGREPORT = some@email.com
PACKAGE_NAME = libhdt
PACKAGE_STRING = libhdt 1.1.2
PACKAGE_TARNAME = hdt
PACKAGE_URL = https://github.com/rdfhdt/hdt-cpp
PACKAGE_VERSION = 1.1.2
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
RANLIB = ranlib
SED = /bin/sed
SERD_CFLAGS = -I/usr/local/include/serd-0
SERD_LIBS = -L/usr/local/lib -lserd-0
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
VERSION = 1.1.2
WARN_CFLAGS =  -Wall -Wextra -Wno-sign-compare -Wno-unused-but-set-variable -Wno-unused-parameter
ZLIB_CFLAGS = 
ZLIB_LIBS = -lz
abs_builddir = /home/fernandez/smartKG-creator-types/hdt-cpp-molecules/libhdt
abs_srcdir = /home/fernandez/smartKG-creator-types/hdt-cpp-molecules/libhdt
abs_top_builddir = /home/fernandez/smartKG-creator-types/hdt-cpp-molecules
abs_top_srcdir = /home/fernandez/smartKG-creator-types/hdt-cpp-molecules
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
gl_LIBOBJS = 
gl_LTLIBOBJS = 
gltests_LIBOBJS = 
gltests_LTLIBOBJS = 
gltests_WITNESS = IN_HDT_GNULIB_TESTS
host = x86_64-pc-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/fernandez/smartKG-creator-types/hdt-cpp-molecules/build/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
SUBDIRS = . tools tests
AUTOMAKE_OPTIONS = subdir-objects
include_HEADERS = \
	include/ControlInformation.hpp\
	include/Dictionary.hpp\
	include/HDTEnums.hpp\
	include/HDT.hpp\
	include/HDTListener.hpp\
	include/HDTManager.hpp\
	include/HDTSpecification.hpp\
	include/HDTVersion.hpp\
	include/HDTVocabulary.hpp\
	include/Header.hpp\
	include/Iterator.hpp\
	include/RDF.hpp\
	include/RDFParser.hpp\
	include/RDFSerializer.hpp\
	include/SingleTriple.hpp\
	include/Triples.hpp\
	include/pyhdt_types.hpp\
	include/triple_comparison.hpp\
	include/hdt_document.hpp

lib_LTLIBRARIES = libhdt.la
libhdt_la_SOURCES = \
src/bitsequence/BitSequence375.cpp \
src/dictionary/FourSectionDictionary.cpp \
src/dictionary/KyotoDictionary.cpp \
src/dictionary/LiteralDictionary.cpp \
src/dictionary/PlainDictionary.cpp \
src/hdt/BasicHDT.cpp \
src/hdt/BasicModifiableHDT.cpp \
src/hdt/ControlInformation.cpp \
src/hdt/HDTFactory.cpp \
src/hdt/HDTManager.cpp \
src/hdt/HDTSpecification.cpp \
src/hdt/TripleIDStringIterator.cpp \
src/hdt/hdt_document.cpp \
src/header/PlainHeader.cpp \
src/huffman/huff.cpp \
src/huffman/Huffman.cpp \
src/libdcs/CSD_Cache2.cpp \
src/libdcs/CSD_Cache.cpp \
src/libdcs/CSD.cpp \
src/libdcs/CSD_FMIndex.cpp \
src/libdcs/CSD_HTFC.cpp \
src/libdcs/CSD_PFC.cpp \
src/libdcs/VByte.cpp \
src/libdcs/fmindex/SSA.cpp \
src/libdcs/fmindex/SuffixArray.cpp \
src/rdf/RDFParser.cpp \
src/rdf/RDFParserNtriples.cpp \
src/rdf/RDFParserSerd.cpp \
src/rdf/RDFSerializer.cpp \
src/rdf/RDFSerializerNTriples.cpp \
src/rdf/RDFSerializerSerd.cpp \
src/sequence/AdjacencyList.cpp \
src/sequence/ArraySequence.cpp \
src/sequence/HuffmanSequence.cpp \
src/sequence/IntSequence.cpp \
src/sequence/LogSequence2.cpp \
src/sequence/LogSequence.cpp \
src/sequence/WaveletSequence.cpp \
src/sparql/IndexJoinBinding.cpp \
src/sparql/JoinAlgorithms.cpp \
src/sparql/MergeJoinBinding.cpp \
src/sparql/QueryProcessor.cpp \
src/sparql/SortBinding.cpp \
src/sparql/TriplePatternBinding.cpp \
src/triples/BitmapTriples.cpp \
src/triples/BitmapTriplesIterators.cpp \
src/triples/PlainTriples.cpp \
src/triples/predicateindex.cpp \
src/triples/TripleIterators.cpp \
src/triples/TripleListDisk.cpp \
src/triples/TripleOrderConvert.cpp \
src/triples/TriplesComparator.cpp \
src/triples/TriplesKyoto.cpp \
src/triples/TriplesList.cpp \
src/util/bitutil.cpp \
src/util/crc16.cpp \
src/util/crc32.cpp \
src/util/crc8.cpp \
src/util/filemap.cpp \
src/util/fileUtil.cpp \
src/util/propertyutil.cpp \
src/util/StopWatch.cpp \
src/util/getopt.c \
third/gzstream.cpp \
src/bitsequence/BitSeq.h\
src/bitsequence/BitSequence375.h\
src/huffman/huff.h\
src/huffman/Huffman.h\
src/libdcs/CSD_Cache2.h\
src/libdcs/CSD_Cache.h\
src/libdcs/CSD_FMIndex.h\
src/libdcs/CSD.h\
src/libdcs/CSD_HTFC.h\
src/libdcs/CSD_PFC.h\
src/libdcs/fmindex/SSA.h\
src/libdcs/fmindex/SuffixArray.h\
src/libdcs/hutucker/binarynode.h\
src/libdcs/hutucker/hutucker.h\
src/libdcs/VByte.h\
src/util/bitutil.h\
src/util/crc16.h\
src/util/crc32.h\
src/util/crc8.h\
src/util/filemap.h\
src/util/Histogram.h\
src/util/lru_cache.h\
src/util/mygetopt.h\
src/util/propertyutil.h\
third/gzstream.h\
src/dictionary/FourSectionDictionary.hpp\
src/dictionary/KyotoDictionary.hpp\
src/dictionary/LiteralDictionary.hpp\
src/dictionary/PlainDictionary.hpp\
src/hdt/BasicHDT.hpp\
src/hdt/BasicModifiableHDT.hpp\
src/hdt/HDTFactory.hpp\
src/hdt/TripleIDStringIterator.hpp\
src/header/PlainHeader.hpp\
src/rdf/RDFParserNtriples.hpp\
src/rdf/RDFParserSerd.hpp\
src/rdf/RDFSerializerNTriples.hpp\
src/rdf/RDFSerializerSerd.hpp\
src/sequence/AdjacencyList.hpp\
src/sequence/ArraySequence.hpp\
src/sequence/HuffmanSequence.hpp\
src/sequence/IntSequence.hpp\
src/sequence/LogSequence2.hpp\
src/sequence/LogSequence.hpp\
src/sequence/WaveletSequence.hpp\
src/sparql/BaseJoinBinding.hpp\
src/sparql/CachedBinding.hpp\
src/sparql/IndexJoinBinding.hpp\
src/sparql/JoinAlgorithms.hpp\
src/sparql/joins.hpp\
src/sparql/MergeJoinBinding.hpp\
src/sparql/QueryProcessor.hpp\
src/sparql/SortBinding.hpp\
src/sparql/TriplePatternBinding.hpp\
src/sparql/VarBindingInterface.hpp\
src/sparql/VarFilterBinding.hpp\
src/triples/BitmapTriples.hpp\
src/triples/PlainTriples.hpp\
src/triples/predicateindex.hpp\
src/triples/TripleIterators.hpp\
src/triples/TripleListDisk.hpp\
src/triples/TripleOrderConvert.hpp\
src/triples/TriplesComparator.hpp\
src/triples/TriplesKyoto.hpp\
src/triples/TriplesList.hpp\
src/util/fdstream.hpp\
src/util/fileUtil.hpp\
src/util/StopWatch.hpp\
src/util/unicode.hpp\
third/fdstream.hpp

libhdt_la_CPPFLAGS = $(WARN_CFLAGS) -I$(top_builddir)/lib \
	-I$(builddir)/include $(KYOTO_CFLAGS) $(SERD_CFLAGS) \
	$(ZLIB_CFLAGS) $(EXTRAFLAGS) $(am__append_1)
libhdt_la_LDFLAGS = $(SERD_LIBS) $(ZLIB_LIBS) $(KYOTO_LIBS)
libhdt_la_LIBADD = $(am__append_2)
pkgconfigdir = $(libdir)/pkgconfig
pkgconfig_DATA = hdt.pc
all: all-recursive

.SUFFIXES:
.SUFFIXES: .c .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign libhdt/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign libhdt/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
hdt.pc: $(top_builddir)/config.status $(srcdir)/hdt.pc.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}
src/bitsequence/$(am__dirstamp):
	@$(MKDIR_P) src/bitsequence
	@: > src/bitsequence/$(am__dirstamp)
src/bitsequence/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/bitsequence/$(DEPDIR)
	@: > src/bitsequence/$(DEPDIR)/$(am__dirstamp)
src/bitsequence/libhdt_la-BitSequence375.lo:  \
	src/bitsequence/$(am__dirstamp) \
	src/bitsequence/$(DEPDIR)/$(am__dirstamp)
src/dictionary/$(am__dirstamp):
	@$(MKDIR_P) src/dictionary
	@: > src/dictionary/$(am__dirstamp)
src/dictionary/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/dictionary/$(DEPDIR)
	@: > src/dictionary/$(DEPDIR)/$(am__dirstamp)
src/dictionary/libhdt_la-FourSectionDictionary.lo:  \
	src/dictionary/$(am__dirstamp) \
	src/dictionary/$(DEPDIR)/$(am__dirstamp)
src/dictionary/libhdt_la-KyotoDictionary.lo:  \
	src/dictionary/$(am__dirstamp) \
	src/dictionary/$(DEPDIR)/$(am__dirstamp)
src/dictionary/libhdt_la-LiteralDictionary.lo:  \
	src/dictionary/$(am__dirstamp) \
	src/dictionary/$(DEPDIR)/$(am__dirstamp)
src/dictionary/libhdt_la-PlainDictionary.lo:  \
	src/dictionary/$(am__dirstamp) \
	src/dictionary/$(DEPDIR)/$(am__dirstamp)
src/hdt/$(am__dirstamp):
	@$(MKDIR_P) src/hdt
	@: > src/hdt/$(am__dirstamp)
src/hdt/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/hdt/$(DEPDIR)
	@: > src/hdt/$(DEPDIR)/$(am__dirstamp)
src/hdt/libhdt_la-BasicHDT.lo: src/hdt/$(am__dirstamp) \
	src/hdt/$(DEPDIR)/$(am__dirstamp)
src/hdt/libhdt_la-BasicModifiableHDT.lo: src/hdt/$(am__dirstamp) \
	src/hdt/$(DEPDIR)/$(am__dirstamp)
src/hdt/libhdt_la-ControlInformation.lo: src/hdt/$(am__dirstamp) \
	src/hdt/$(DEPDIR)/$(am__dirstamp)
src/hdt/libhdt_la-HDTFactory.lo: src/hdt/$(am__dirstamp) \
	src/hdt/$(DEPDIR)/$(am__dirstamp)
src/hdt/libhdt_la-HDTManager.lo: src/hdt/$(am__dirstamp) \
	src/hdt/$(DEPDIR)/$(am__dirstamp)
src/hdt/libhdt_la-HDTSpecification.lo: src/hdt/$(am__dirstamp) \
	src/hdt/$(DEPDIR)/$(am__dirstamp)
src/hdt/libhdt_la-TripleIDStringIterator.lo: src/hdt/$(am__dirstamp) \
	src/hdt/$(DEPDIR)/$(am__dirstamp)
src/hdt/libhdt_la-hdt_document.lo: src/hdt/$(am__dirstamp) \
	src/hdt/$(DEPDIR)/$(am__dirstamp)
src/header/$(am__dirstamp):
	@$(MKDIR_P) src/header
	@: > src/header/$(am__dirstamp)
src/header/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/header/$(DEPDIR)
	@: > src/header/$(DEPDIR)/$(am__dirstamp)
src/header/libhdt_la-PlainHeader.lo: src/header/$(am__dirstamp) \
	src/header/$(DEPDIR)/$(am__dirstamp)
src/huffman/$(am__dirstamp):
	@$(MKDIR_P) src/huffman
	@: > src/huffman/$(am__dirstamp)
src/huffman/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/huffman/$(DEPDIR)
	@: > src/huffman/$(DEPDIR)/$(am__dirstamp)
src/huffman/libhdt_la-huff.lo: src/huffman/$(am__dirstamp) \
	src/huffman/$(DEPDIR)/$(am__dirstamp)
src/huffman/libhdt_la-Huffman.lo: src/huffman/$(am__dirstamp) \
	src/huffman/$(DEPDIR)/$(am__dirstamp)
src/libdcs/$(am__dirstamp):
	@$(MKDIR_P) src/libdcs
	@: > src/libdcs/$(am__dirstamp)
src/libdcs/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/libdcs/$(DEPDIR)
	@: > src/libdcs/$(DEPDIR)/$(am__dirstamp)
src/libdcs/libhdt_la-CSD_Cache2.lo: src/libdcs/$(am__dirstamp) \
	src/libdcs/$(DEPDIR)/$(am__dirstamp)
src/libdcs/libhdt_la-CSD_Cache.lo: src/libdcs/$(am__dirstamp) \
	src/libdcs/$(DEPDIR)/$(am__dirstamp)
src/libdcs/libhdt_la-CSD.lo: src/libdcs/$(am__dirstamp) \
	src/libdcs/$(DEPDIR)/$(am__dirstamp)
src/libdcs/libhdt_la-CSD_FMIndex.lo: src/libdcs/$(am__dirstamp) \
	src/libdcs/$(DEPDIR)/$(am__dirstamp)
src/libdcs/libhdt_la-CSD_HTFC.lo: src/libdcs/$(am__dirstamp) \
	src/libdcs/$(DEPDIR)/$(am__dirstamp)
src/libdcs/libhdt_la-CSD_PFC.lo: src/libdcs/$(am__dirstamp) \
	src/libdcs/$(DEPDIR)/$(am__dirstamp)
src/libdcs/libhdt_la-VByte.lo: src/libdcs/$(am__dirstamp) \
	src/libdcs/$(DEPDIR)/$(am__dirstamp)
src/libdcs/fmindex/$(am__dirstamp):
	@$(MKDIR_P) src/libdcs/fmindex
	@: > src/libdcs/fmindex/$(am__dirstamp)
src/libdcs/fmindex/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/libdcs/fmindex/$(DEPDIR)
	@: > src/libdcs/fmindex/$(DEPDIR)/$(am__dirstamp)
src/libdcs/fmindex/libhdt_la-SSA.lo:  \
	src/libdcs/fmindex/$(am__dirstamp) \
	src/libdcs/fmindex/$(DEPDIR)/$(am__dirstamp)
src/libdcs/fmindex/libhdt_la-SuffixArray.lo:  \
	src/libdcs/fmindex/$(am__dirstamp) \
	src/libdcs/fmindex/$(DEPDIR)/$(am__dirstamp)
src/rdf/$(am__dirstamp):
	@$(MKDIR_P) src/rdf
	@: > src/rdf/$(am__dirstamp)
src/rdf/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/rdf/$(DEPDIR)
	@: > src/rdf/$(DEPDIR)/$(am__dirstamp)
src/rdf/libhdt_la-RDFParser.lo: src/rdf/$(am__dirstamp) \
	src/rdf/$(DEPDIR)/$(am__dirstamp)
src/rdf/libhdt_la-RDFParserNtriples.lo: src/rdf/$(am__dirstamp) \
	src/rdf/$(DEPDIR)/$(am__dirstamp)
src/rdf/libhdt_la-RDFParserSerd.lo: src/rdf/$(am__dirstamp) \
	src/rdf/$(DEPDIR)/$(am__dirstamp)
src/rdf/libhdt_la-RDFSerializer.lo: src/rdf/$(am__dirstamp) \
	src/rdf/$(DEPDIR)/$(am__dirstamp)
src/rdf/libhdt_la-RDFSerializerNTriples.lo: src/rdf/$(am__dirstamp) \
	src/rdf/$(DEPDIR)/$(am__dirstamp)
src/rdf/libhdt_la-RDFSerializerSerd.lo: src/rdf/$(am__dirstamp) \
	src/rdf/$(DEPDIR)/$(am__dirstamp)
src/sequence/$(am__dirstamp):
	@$(MKDIR_P) src/sequence
	@: > src/sequence/$(am__dirstamp)
src/sequence/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/sequence/$(DEPDIR)
	@: > src/sequence/$(DEPDIR)/$(am__dirstamp)
src/sequence/libhdt_la-AdjacencyList.lo: src/sequence/$(am__dirstamp) \
	src/sequence/$(DEPDIR)/$(am__dirstamp)
src/sequence/libhdt_la-ArraySequence.lo: src/sequence/$(am__dirstamp) \
	src/sequence/$(DEPDIR)/$(am__dirstamp)
src/sequence/libhdt_la-HuffmanSequence.lo:  \
	src/sequence/$(am__dirstamp) \
	src/sequence/$(DEPDIR)/$(am__dirstamp)
src/sequence/libhdt_la-IntSequence.lo: src/sequence/$(am__dirstamp) \
	src/sequence/$(DEPDIR)/$(am__dirstamp)
src/sequence/libhdt_la-LogSequence2.lo: src/sequence/$(am__dirstamp) \
	src/sequence/$(DEPDIR)/$(am__dirstamp)
src/sequence/libhdt_la-LogSequence.lo: src/sequence/$(am__dirstamp) \
	src/sequence/$(DEPDIR)/$(am__dirstamp)
src/sequence/libhdt_la-WaveletSequence.lo:  \
	src/sequence/$(am__dirstamp) \
	src/sequence/$(DEPDIR)/$(am__dirstamp)
src/sparql/$(am__dirstamp):
	@$(MKDIR_P) src/sparql
	@: > src/sparql/$(am__dirstamp)
src/sparql/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/sparql/$(DEPDIR)
	@: > src/sparql/$(DEPDIR)/$(am__dirstamp)
src/sparql/libhdt_la-IndexJoinBinding.lo: src/sparql/$(am__dirstamp) \
	src/sparql/$(DEPDIR)/$(am__dirstamp)
src/sparql/libhdt_la-JoinAlgorithms.lo: src/sparql/$(am__dirstamp) \
	src/sparql/$(DEPDIR)/$(am__dirstamp)
src/sparql/libhdt_la-MergeJoinBinding.lo: src/sparql/$(am__dirstamp) \
	src/sparql/$(DEPDIR)/$(am__dirstamp)
src/sparql/libhdt_la-QueryProcessor.lo: src/sparql/$(am__dirstamp) \
	src/sparql/$(DEPDIR)/$(am__dirstamp)
src/sparql/libhdt_la-SortBinding.lo: src/sparql/$(am__dirstamp) \
	src/sparql/$(DEPDIR)/$(am__dirstamp)
src/sparql/libhdt_la-TriplePatternBinding.lo:  \
	src/sparql/$(am__dirstamp) \
	src/sparql/$(DEPDIR)/$(am__dirstamp)
src/triples/$(am__dirstamp):
	@$(MKDIR_P) src/triples
	@: > src/triples/$(am__dirstamp)
src/triples/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/triples/$(DEPDIR)
	@: > src/triples/$(DEPDIR)/$(am__dirstamp)
src/triples/libhdt_la-BitmapTriples.lo: src/triples/$(am__dirstamp) \
	src/triples/$(DEPDIR)/$(am__dirstamp)
src/triples/libhdt_la-BitmapTriplesIterators.lo:  \
	src/triples/$(am__dirstamp) \
	src/triples/$(DEPDIR)/$(am__dirstamp)
src/triples/libhdt_la-PlainTriples.lo: src/triples/$(am__dirstamp) \
	src/triples/$(DEPDIR)/$(am__dirstamp)
src/triples/libhdt_la-predicateindex.lo: src/triples/$(am__dirstamp) \
	src/triples/$(DEPDIR)/$(am__dirstamp)
src/triples/libhdt_la-TripleIterators.lo: src/triples/$(am__dirstamp) \
	src/triples/$(DEPDIR)/$(am__dirstamp)
src/triples/libhdt_la-TripleListDisk.lo: src/triples/$(am__dirstamp) \
	src/triples/$(DEPDIR)/$(am__dirstamp)
src/triples/libhdt_la-TripleOrderConvert.lo:  \
	src/triples/$(am__dirstamp) \
	src/triples/$(DEPDIR)/$(am__dirstamp)
src/triples/libhdt_la-TriplesComparator.lo:  \
	src/triples/$(am__dirstamp) \
	src/triples/$(DEPDIR)/$(am__dirstamp)
src/triples/libhdt_la-TriplesKyoto.lo: src/triples/$(am__dirstamp) \
	src/triples/$(DEPDIR)/$(am__dirstamp)
src/triples/libhdt_la-TriplesList.lo: src/triples/$(am__dirstamp) \
	src/triples/$(DEPDIR)/$(am__dirstamp)
src/util/$(am__dirstamp):
	@$(MKDIR_P) src/util
	@: > src/util/$(am__dirstamp)
src/util/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/util/$(DEPDIR)
	@: > src/util/$(DEPDIR)/$(am__dirstamp)
src/util/libhdt_la-bitutil.lo: src/util/$(am__dirstamp) \
	src/util/$(DEPDIR)/$(am__dirstamp)
src/util/libhdt_la-crc16.lo: src/util/$(am__dirstamp) \
	src/util/$(DEPDIR)/$(am__dirstamp)
src/util/libhdt_la-crc32.lo: src/util/$(am__dirstamp) \
	src/util/$(DEPDIR)/$(am__dirstamp)
src/util/libhdt_la-crc8.lo: src/util/$(am__dirstamp) \
	src/util/$(DEPDIR)/$(am__dirstamp)
src/util/libhdt_la-filemap.lo: src/util/$(am__dirstamp) \
	src/util/$(DEPDIR)/$(am__dirstamp)
src/util/libhdt_la-fileUtil.lo: src/util/$(am__dirstamp) \
	src/util/$(DEPDIR)/$(am__dirstamp)
src/util/libhdt_la-propertyutil.lo: src/util/$(am__dirstamp) \
	src/util/$(DEPDIR)/$(am__dirstamp)
src/util/libhdt_la-StopWatch.lo: src/util/$(am__dirstamp) \
	src/util/$(DEPDIR)/$(am__dirstamp)
src/util/libhdt_la-getopt.lo: src/util/$(am__dirstamp) \
	src/util/$(DEPDIR)/$(am__dirstamp)
third/$(am__dirstamp):
	@$(MKDIR_P) third
	@: > third/$(am__dirstamp)
third/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) third/$(DEPDIR)
	@: > third/$(DEPDIR)/$(am__dirstamp)
third/libhdt_la-gzstream.lo: third/$(am__dirstamp) \
	third/$(DEPDIR)/$(am__dirstamp)

libhdt.la: $(libhdt_la_OBJECTS) $(libhdt_la_DEPENDENCIES) $(EXTRA_libhdt_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(libhdt_la_LINK) -rpath $(libdir) $(libhdt_la_OBJECTS) $(libhdt_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f src/bitsequence/*.$(OBJEXT)
	-rm -f src/bitsequence/*.lo
	-rm -f src/dictionary/*.$(OBJEXT)
	-rm -f src/dictionary/*.lo
	-rm -f src/hdt/*.$(OBJEXT)
	-rm -f src/hdt/*.lo
	-rm -f src/header/*.$(OBJEXT)
	-rm -f src/header/*.lo
	-rm -f src/huffman/*.$(OBJEXT)
	-rm -f src/huffman/*.lo
	-rm -f src/libdcs/*.$(OBJEXT)
	-rm -f src/libdcs/*.lo
	-rm -f src/libdcs/fmindex/*.$(OBJEXT)
	-rm -f src/libdcs/fmindex/*.lo
	-rm -f src/rdf/*.$(OBJEXT)
	-rm -f src/rdf/*.lo
	-rm -f src/sequence/*.$(OBJEXT)
	-rm -f src/sequence/*.lo
	-rm -f src/sparql/*.$(OBJEXT)
	-rm -f src/sparql/*.lo
	-rm -f src/triples/*.$(OBJEXT)
	-rm -f src/triples/*.lo
	-rm -f src/util/*.$(OBJEXT)
	-rm -f src/util/*.lo
	-rm -f third/*.$(OBJEXT)
	-rm -f third/*.lo

distclean-compile:
	-rm -f *.tab.c

include src/bitsequence/$(DEPDIR)/libhdt_la-BitSequence375.Plo
include src/dictionary/$(DEPDIR)/libhdt_la-FourSectionDictionary.Plo
include src/dictionary/$(DEPDIR)/libhdt_la-KyotoDictionary.Plo
include src/dictionary/$(DEPDIR)/libhdt_la-LiteralDictionary.Plo
include src/dictionary/$(DEPDIR)/libhdt_la-PlainDictionary.Plo
include src/hdt/$(DEPDIR)/libhdt_la-BasicHDT.Plo
include src/hdt/$(DEPDIR)/libhdt_la-BasicModifiableHDT.Plo
include src/hdt/$(DEPDIR)/libhdt_la-ControlInformation.Plo
include src/hdt/$(DEPDIR)/libhdt_la-HDTFactory.Plo
include src/hdt/$(DEPDIR)/libhdt_la-HDTManager.Plo
include src/hdt/$(DEPDIR)/libhdt_la-HDTSpecification.Plo
include src/hdt/$(DEPDIR)/libhdt_la-TripleIDStringIterator.Plo
include src/hdt/$(DEPDIR)/libhdt_la-hdt_document.Plo
include src/header/$(DEPDIR)/libhdt_la-PlainHeader.Plo
include src/huffman/$(DEPDIR)/libhdt_la-Huffman.Plo
include src/huffman/$(DEPDIR)/libhdt_la-huff.Plo
include src/libdcs/$(DEPDIR)/libhdt_la-CSD.Plo
include src/libdcs/$(DEPDIR)/libhdt_la-CSD_Cache.Plo
include src/libdcs/$(DEPDIR)/libhdt_la-CSD_Cache2.Plo
include src/libdcs/$(DEPDIR)/libhdt_la-CSD_FMIndex.Plo
include src/libdcs/$(DEPDIR)/libhdt_la-CSD_HTFC.Plo
include src/libdcs/$(DEPDIR)/libhdt_la-CSD_PFC.Plo
include src/libdcs/$(DEPDIR)/libhdt_la-VByte.Plo
include src/libdcs/fmindex/$(DEPDIR)/libhdt_la-SSA.Plo
include src/libdcs/fmindex/$(DEPDIR)/libhdt_la-SuffixArray.Plo
include src/rdf/$(DEPDIR)/libhdt_la-RDFParser.Plo
include src/rdf/$(DEPDIR)/libhdt_la-RDFParserNtriples.Plo
include src/rdf/$(DEPDIR)/libhdt_la-RDFParserSerd.Plo
include src/rdf/$(DEPDIR)/libhdt_la-RDFSerializer.Plo
include src/rdf/$(DEPDIR)/libhdt_la-RDFSerializerNTriples.Plo
include src/rdf/$(DEPDIR)/libhdt_la-RDFSerializerSerd.Plo
include src/sequence/$(DEPDIR)/libhdt_la-AdjacencyList.Plo
include src/sequence/$(DEPDIR)/libhdt_la-ArraySequence.Plo
include src/sequence/$(DEPDIR)/libhdt_la-HuffmanSequence.Plo
include src/sequence/$(DEPDIR)/libhdt_la-IntSequence.Plo
include src/sequence/$(DEPDIR)/libhdt_la-LogSequence.Plo
include src/sequence/$(DEPDIR)/libhdt_la-LogSequence2.Plo
include src/sequence/$(DEPDIR)/libhdt_la-WaveletSequence.Plo
include src/sparql/$(DEPDIR)/libhdt_la-IndexJoinBinding.Plo
include src/sparql/$(DEPDIR)/libhdt_la-JoinAlgorithms.Plo
include src/sparql/$(DEPDIR)/libhdt_la-MergeJoinBinding.Plo
include src/sparql/$(DEPDIR)/libhdt_la-QueryProcessor.Plo
include src/sparql/$(DEPDIR)/libhdt_la-SortBinding.Plo
include src/sparql/$(DEPDIR)/libhdt_la-TriplePatternBinding.Plo
include src/triples/$(DEPDIR)/libhdt_la-BitmapTriples.Plo
include src/triples/$(DEPDIR)/libhdt_la-BitmapTriplesIterators.Plo
include src/triples/$(DEPDIR)/libhdt_la-PlainTriples.Plo
include src/triples/$(DEPDIR)/libhdt_la-TripleIterators.Plo
include src/triples/$(DEPDIR)/libhdt_la-TripleListDisk.Plo
include src/triples/$(DEPDIR)/libhdt_la-TripleOrderConvert.Plo
include src/triples/$(DEPDIR)/libhdt_la-TriplesComparator.Plo
include src/triples/$(DEPDIR)/libhdt_la-TriplesKyoto.Plo
include src/triples/$(DEPDIR)/libhdt_la-TriplesList.Plo
include src/triples/$(DEPDIR)/libhdt_la-predicateindex.Plo
include src/util/$(DEPDIR)/libhdt_la-StopWatch.Plo
include src/util/$(DEPDIR)/libhdt_la-bitutil.Plo
include src/util/$(DEPDIR)/libhdt_la-crc16.Plo
include src/util/$(DEPDIR)/libhdt_la-crc32.Plo
include src/util/$(DEPDIR)/libhdt_la-crc8.Plo
include src/util/$(DEPDIR)/libhdt_la-fileUtil.Plo
include src/util/$(DEPDIR)/libhdt_la-filemap.Plo
include src/util/$(DEPDIR)/libhdt_la-getopt.Plo
include src/util/$(DEPDIR)/libhdt_la-propertyutil.Plo
include third/$(DEPDIR)/libhdt_la-gzstream.Plo

.c.o:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

src/util/libhdt_la-getopt.lo: src/util/getopt.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/util/libhdt_la-getopt.lo -MD -MP -MF src/util/$(DEPDIR)/libhdt_la-getopt.Tpo -c -o src/util/libhdt_la-getopt.lo `test -f 'src/util/getopt.c' || echo '$(srcdir)/'`src/util/getopt.c
	$(AM_V_at)$(am__mv) src/util/$(DEPDIR)/libhdt_la-getopt.Tpo src/util/$(DEPDIR)/libhdt_la-getopt.Plo
#	$(AM_V_CC)source='src/util/getopt.c' object='src/util/libhdt_la-getopt.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/util/libhdt_la-getopt.lo `test -f 'src/util/getopt.c' || echo '$(srcdir)/'`src/util/getopt.c

.cpp.o:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

src/bitsequence/libhdt_la-BitSequence375.lo: src/bitsequence/BitSequence375.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/bitsequence/libhdt_la-BitSequence375.lo -MD -MP -MF src/bitsequence/$(DEPDIR)/libhdt_la-BitSequence375.Tpo -c -o src/bitsequence/libhdt_la-BitSequence375.lo `test -f 'src/bitsequence/BitSequence375.cpp' || echo '$(srcdir)/'`src/bitsequence/BitSequence375.cpp
	$(AM_V_at)$(am__mv) src/bitsequence/$(DEPDIR)/libhdt_la-BitSequence375.Tpo src/bitsequence/$(DEPDIR)/libhdt_la-BitSequence375.Plo
#	$(AM_V_CXX)source='src/bitsequence/BitSequence375.cpp' object='src/bitsequence/libhdt_la-BitSequence375.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/bitsequence/libhdt_la-BitSequence375.lo `test -f 'src/bitsequence/BitSequence375.cpp' || echo '$(srcdir)/'`src/bitsequence/BitSequence375.cpp

src/dictionary/libhdt_la-FourSectionDictionary.lo: src/dictionary/FourSectionDictionary.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/dictionary/libhdt_la-FourSectionDictionary.lo -MD -MP -MF src/dictionary/$(DEPDIR)/libhdt_la-FourSectionDictionary.Tpo -c -o src/dictionary/libhdt_la-FourSectionDictionary.lo `test -f 'src/dictionary/FourSectionDictionary.cpp' || echo '$(srcdir)/'`src/dictionary/FourSectionDictionary.cpp
	$(AM_V_at)$(am__mv) src/dictionary/$(DEPDIR)/libhdt_la-FourSectionDictionary.Tpo src/dictionary/$(DEPDIR)/libhdt_la-FourSectionDictionary.Plo
#	$(AM_V_CXX)source='src/dictionary/FourSectionDictionary.cpp' object='src/dictionary/libhdt_la-FourSectionDictionary.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/dictionary/libhdt_la-FourSectionDictionary.lo `test -f 'src/dictionary/FourSectionDictionary.cpp' || echo '$(srcdir)/'`src/dictionary/FourSectionDictionary.cpp

src/dictionary/libhdt_la-KyotoDictionary.lo: src/dictionary/KyotoDictionary.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/dictionary/libhdt_la-KyotoDictionary.lo -MD -MP -MF src/dictionary/$(DEPDIR)/libhdt_la-KyotoDictionary.Tpo -c -o src/dictionary/libhdt_la-KyotoDictionary.lo `test -f 'src/dictionary/KyotoDictionary.cpp' || echo '$(srcdir)/'`src/dictionary/KyotoDictionary.cpp
	$(AM_V_at)$(am__mv) src/dictionary/$(DEPDIR)/libhdt_la-KyotoDictionary.Tpo src/dictionary/$(DEPDIR)/libhdt_la-KyotoDictionary.Plo
#	$(AM_V_CXX)source='src/dictionary/KyotoDictionary.cpp' object='src/dictionary/libhdt_la-KyotoDictionary.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/dictionary/libhdt_la-KyotoDictionary.lo `test -f 'src/dictionary/KyotoDictionary.cpp' || echo '$(srcdir)/'`src/dictionary/KyotoDictionary.cpp

src/dictionary/libhdt_la-LiteralDictionary.lo: src/dictionary/LiteralDictionary.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/dictionary/libhdt_la-LiteralDictionary.lo -MD -MP -MF src/dictionary/$(DEPDIR)/libhdt_la-LiteralDictionary.Tpo -c -o src/dictionary/libhdt_la-LiteralDictionary.lo `test -f 'src/dictionary/LiteralDictionary.cpp' || echo '$(srcdir)/'`src/dictionary/LiteralDictionary.cpp
	$(AM_V_at)$(am__mv) src/dictionary/$(DEPDIR)/libhdt_la-LiteralDictionary.Tpo src/dictionary/$(DEPDIR)/libhdt_la-LiteralDictionary.Plo
#	$(AM_V_CXX)source='src/dictionary/LiteralDictionary.cpp' object='src/dictionary/libhdt_la-LiteralDictionary.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/dictionary/libhdt_la-LiteralDictionary.lo `test -f 'src/dictionary/LiteralDictionary.cpp' || echo '$(srcdir)/'`src/dictionary/LiteralDictionary.cpp

src/dictionary/libhdt_la-PlainDictionary.lo: src/dictionary/PlainDictionary.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/dictionary/libhdt_la-PlainDictionary.lo -MD -MP -MF src/dictionary/$(DEPDIR)/libhdt_la-PlainDictionary.Tpo -c -o src/dictionary/libhdt_la-PlainDictionary.lo `test -f 'src/dictionary/PlainDictionary.cpp' || echo '$(srcdir)/'`src/dictionary/PlainDictionary.cpp
	$(AM_V_at)$(am__mv) src/dictionary/$(DEPDIR)/libhdt_la-PlainDictionary.Tpo src/dictionary/$(DEPDIR)/libhdt_la-PlainDictionary.Plo
#	$(AM_V_CXX)source='src/dictionary/PlainDictionary.cpp' object='src/dictionary/libhdt_la-PlainDictionary.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/dictionary/libhdt_la-PlainDictionary.lo `test -f 'src/dictionary/PlainDictionary.cpp' || echo '$(srcdir)/'`src/dictionary/PlainDictionary.cpp

src/hdt/libhdt_la-BasicHDT.lo: src/hdt/BasicHDT.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/hdt/libhdt_la-BasicHDT.lo -MD -MP -MF src/hdt/$(DEPDIR)/libhdt_la-BasicHDT.Tpo -c -o src/hdt/libhdt_la-BasicHDT.lo `test -f 'src/hdt/BasicHDT.cpp' || echo '$(srcdir)/'`src/hdt/BasicHDT.cpp
	$(AM_V_at)$(am__mv) src/hdt/$(DEPDIR)/libhdt_la-BasicHDT.Tpo src/hdt/$(DEPDIR)/libhdt_la-BasicHDT.Plo
#	$(AM_V_CXX)source='src/hdt/BasicHDT.cpp' object='src/hdt/libhdt_la-BasicHDT.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/hdt/libhdt_la-BasicHDT.lo `test -f 'src/hdt/BasicHDT.cpp' || echo '$(srcdir)/'`src/hdt/BasicHDT.cpp

src/hdt/libhdt_la-BasicModifiableHDT.lo: src/hdt/BasicModifiableHDT.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/hdt/libhdt_la-BasicModifiableHDT.lo -MD -MP -MF src/hdt/$(DEPDIR)/libhdt_la-BasicModifiableHDT.Tpo -c -o src/hdt/libhdt_la-BasicModifiableHDT.lo `test -f 'src/hdt/BasicModifiableHDT.cpp' || echo '$(srcdir)/'`src/hdt/BasicModifiableHDT.cpp
	$(AM_V_at)$(am__mv) src/hdt/$(DEPDIR)/libhdt_la-BasicModifiableHDT.Tpo src/hdt/$(DEPDIR)/libhdt_la-BasicModifiableHDT.Plo
#	$(AM_V_CXX)source='src/hdt/BasicModifiableHDT.cpp' object='src/hdt/libhdt_la-BasicModifiableHDT.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/hdt/libhdt_la-BasicModifiableHDT.lo `test -f 'src/hdt/BasicModifiableHDT.cpp' || echo '$(srcdir)/'`src/hdt/BasicModifiableHDT.cpp

src/hdt/libhdt_la-ControlInformation.lo: src/hdt/ControlInformation.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/hdt/libhdt_la-ControlInformation.lo -MD -MP -MF src/hdt/$(DEPDIR)/libhdt_la-ControlInformation.Tpo -c -o src/hdt/libhdt_la-ControlInformation.lo `test -f 'src/hdt/ControlInformation.cpp' || echo '$(srcdir)/'`src/hdt/ControlInformation.cpp
	$(AM_V_at)$(am__mv) src/hdt/$(DEPDIR)/libhdt_la-ControlInformation.Tpo src/hdt/$(DEPDIR)/libhdt_la-ControlInformation.Plo
#	$(AM_V_CXX)source='src/hdt/ControlInformation.cpp' object='src/hdt/libhdt_la-ControlInformation.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/hdt/libhdt_la-ControlInformation.lo `test -f 'src/hdt/ControlInformation.cpp' || echo '$(srcdir)/'`src/hdt/ControlInformation.cpp

src/hdt/libhdt_la-HDTFactory.lo: src/hdt/HDTFactory.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/hdt/libhdt_la-HDTFactory.lo -MD -MP -MF src/hdt/$(DEPDIR)/libhdt_la-HDTFactory.Tpo -c -o src/hdt/libhdt_la-HDTFactory.lo `test -f 'src/hdt/HDTFactory.cpp' || echo '$(srcdir)/'`src/hdt/HDTFactory.cpp
	$(AM_V_at)$(am__mv) src/hdt/$(DEPDIR)/libhdt_la-HDTFactory.Tpo src/hdt/$(DEPDIR)/libhdt_la-HDTFactory.Plo
#	$(AM_V_CXX)source='src/hdt/HDTFactory.cpp' object='src/hdt/libhdt_la-HDTFactory.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/hdt/libhdt_la-HDTFactory.lo `test -f 'src/hdt/HDTFactory.cpp' || echo '$(srcdir)/'`src/hdt/HDTFactory.cpp

src/hdt/libhdt_la-HDTManager.lo: src/hdt/HDTManager.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/hdt/libhdt_la-HDTManager.lo -MD -MP -MF src/hdt/$(DEPDIR)/libhdt_la-HDTManager.Tpo -c -o src/hdt/libhdt_la-HDTManager.lo `test -f 'src/hdt/HDTManager.cpp' || echo '$(srcdir)/'`src/hdt/HDTManager.cpp
	$(AM_V_at)$(am__mv) src/hdt/$(DEPDIR)/libhdt_la-HDTManager.Tpo src/hdt/$(DEPDIR)/libhdt_la-HDTManager.Plo
#	$(AM_V_CXX)source='src/hdt/HDTManager.cpp' object='src/hdt/libhdt_la-HDTManager.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/hdt/libhdt_la-HDTManager.lo `test -f 'src/hdt/HDTManager.cpp' || echo '$(srcdir)/'`src/hdt/HDTManager.cpp

src/hdt/libhdt_la-HDTSpecification.lo: src/hdt/HDTSpecification.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/hdt/libhdt_la-HDTSpecification.lo -MD -MP -MF src/hdt/$(DEPDIR)/libhdt_la-HDTSpecification.Tpo -c -o src/hdt/libhdt_la-HDTSpecification.lo `test -f 'src/hdt/HDTSpecification.cpp' || echo '$(srcdir)/'`src/hdt/HDTSpecification.cpp
	$(AM_V_at)$(am__mv) src/hdt/$(DEPDIR)/libhdt_la-HDTSpecification.Tpo src/hdt/$(DEPDIR)/libhdt_la-HDTSpecification.Plo
#	$(AM_V_CXX)source='src/hdt/HDTSpecification.cpp' object='src/hdt/libhdt_la-HDTSpecification.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/hdt/libhdt_la-HDTSpecification.lo `test -f 'src/hdt/HDTSpecification.cpp' || echo '$(srcdir)/'`src/hdt/HDTSpecification.cpp

src/hdt/libhdt_la-TripleIDStringIterator.lo: src/hdt/TripleIDStringIterator.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/hdt/libhdt_la-TripleIDStringIterator.lo -MD -MP -MF src/hdt/$(DEPDIR)/libhdt_la-TripleIDStringIterator.Tpo -c -o src/hdt/libhdt_la-TripleIDStringIterator.lo `test -f 'src/hdt/TripleIDStringIterator.cpp' || echo '$(srcdir)/'`src/hdt/TripleIDStringIterator.cpp
	$(AM_V_at)$(am__mv) src/hdt/$(DEPDIR)/libhdt_la-TripleIDStringIterator.Tpo src/hdt/$(DEPDIR)/libhdt_la-TripleIDStringIterator.Plo
#	$(AM_V_CXX)source='src/hdt/TripleIDStringIterator.cpp' object='src/hdt/libhdt_la-TripleIDStringIterator.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/hdt/libhdt_la-TripleIDStringIterator.lo `test -f 'src/hdt/TripleIDStringIterator.cpp' || echo '$(srcdir)/'`src/hdt/TripleIDStringIterator.cpp

src/hdt/libhdt_la-hdt_document.lo: src/hdt/hdt_document.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/hdt/libhdt_la-hdt_document.lo -MD -MP -MF src/hdt/$(DEPDIR)/libhdt_la-hdt_document.Tpo -c -o src/hdt/libhdt_la-hdt_document.lo `test -f 'src/hdt/hdt_document.cpp' || echo '$(srcdir)/'`src/hdt/hdt_document.cpp
	$(AM_V_at)$(am__mv) src/hdt/$(DEPDIR)/libhdt_la-hdt_document.Tpo src/hdt/$(DEPDIR)/libhdt_la-hdt_document.Plo
#	$(AM_V_CXX)source='src/hdt/hdt_document.cpp' object='src/hdt/libhdt_la-hdt_document.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/hdt/libhdt_la-hdt_document.lo `test -f 'src/hdt/hdt_document.cpp' || echo '$(srcdir)/'`src/hdt/hdt_document.cpp

src/header/libhdt_la-PlainHeader.lo: src/header/PlainHeader.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/header/libhdt_la-PlainHeader.lo -MD -MP -MF src/header/$(DEPDIR)/libhdt_la-PlainHeader.Tpo -c -o src/header/libhdt_la-PlainHeader.lo `test -f 'src/header/PlainHeader.cpp' || echo '$(srcdir)/'`src/header/PlainHeader.cpp
	$(AM_V_at)$(am__mv) src/header/$(DEPDIR)/libhdt_la-PlainHeader.Tpo src/header/$(DEPDIR)/libhdt_la-PlainHeader.Plo
#	$(AM_V_CXX)source='src/header/PlainHeader.cpp' object='src/header/libhdt_la-PlainHeader.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/header/libhdt_la-PlainHeader.lo `test -f 'src/header/PlainHeader.cpp' || echo '$(srcdir)/'`src/header/PlainHeader.cpp

src/huffman/libhdt_la-huff.lo: src/huffman/huff.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/huffman/libhdt_la-huff.lo -MD -MP -MF src/huffman/$(DEPDIR)/libhdt_la-huff.Tpo -c -o src/huffman/libhdt_la-huff.lo `test -f 'src/huffman/huff.cpp' || echo '$(srcdir)/'`src/huffman/huff.cpp
	$(AM_V_at)$(am__mv) src/huffman/$(DEPDIR)/libhdt_la-huff.Tpo src/huffman/$(DEPDIR)/libhdt_la-huff.Plo
#	$(AM_V_CXX)source='src/huffman/huff.cpp' object='src/huffman/libhdt_la-huff.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/huffman/libhdt_la-huff.lo `test -f 'src/huffman/huff.cpp' || echo '$(srcdir)/'`src/huffman/huff.cpp

src/huffman/libhdt_la-Huffman.lo: src/huffman/Huffman.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/huffman/libhdt_la-Huffman.lo -MD -MP -MF src/huffman/$(DEPDIR)/libhdt_la-Huffman.Tpo -c -o src/huffman/libhdt_la-Huffman.lo `test -f 'src/huffman/Huffman.cpp' || echo '$(srcdir)/'`src/huffman/Huffman.cpp
	$(AM_V_at)$(am__mv) src/huffman/$(DEPDIR)/libhdt_la-Huffman.Tpo src/huffman/$(DEPDIR)/libhdt_la-Huffman.Plo
#	$(AM_V_CXX)source='src/huffman/Huffman.cpp' object='src/huffman/libhdt_la-Huffman.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/huffman/libhdt_la-Huffman.lo `test -f 'src/huffman/Huffman.cpp' || echo '$(srcdir)/'`src/huffman/Huffman.cpp

src/libdcs/libhdt_la-CSD_Cache2.lo: src/libdcs/CSD_Cache2.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libdcs/libhdt_la-CSD_Cache2.lo -MD -MP -MF src/libdcs/$(DEPDIR)/libhdt_la-CSD_Cache2.Tpo -c -o src/libdcs/libhdt_la-CSD_Cache2.lo `test -f 'src/libdcs/CSD_Cache2.cpp' || echo '$(srcdir)/'`src/libdcs/CSD_Cache2.cpp
	$(AM_V_at)$(am__mv) src/libdcs/$(DEPDIR)/libhdt_la-CSD_Cache2.Tpo src/libdcs/$(DEPDIR)/libhdt_la-CSD_Cache2.Plo
#	$(AM_V_CXX)source='src/libdcs/CSD_Cache2.cpp' object='src/libdcs/libhdt_la-CSD_Cache2.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libdcs/libhdt_la-CSD_Cache2.lo `test -f 'src/libdcs/CSD_Cache2.cpp' || echo '$(srcdir)/'`src/libdcs/CSD_Cache2.cpp

src/libdcs/libhdt_la-CSD_Cache.lo: src/libdcs/CSD_Cache.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libdcs/libhdt_la-CSD_Cache.lo -MD -MP -MF src/libdcs/$(DEPDIR)/libhdt_la-CSD_Cache.Tpo -c -o src/libdcs/libhdt_la-CSD_Cache.lo `test -f 'src/libdcs/CSD_Cache.cpp' || echo '$(srcdir)/'`src/libdcs/CSD_Cache.cpp
	$(AM_V_at)$(am__mv) src/libdcs/$(DEPDIR)/libhdt_la-CSD_Cache.Tpo src/libdcs/$(DEPDIR)/libhdt_la-CSD_Cache.Plo
#	$(AM_V_CXX)source='src/libdcs/CSD_Cache.cpp' object='src/libdcs/libhdt_la-CSD_Cache.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libdcs/libhdt_la-CSD_Cache.lo `test -f 'src/libdcs/CSD_Cache.cpp' || echo '$(srcdir)/'`src/libdcs/CSD_Cache.cpp

src/libdcs/libhdt_la-CSD.lo: src/libdcs/CSD.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libdcs/libhdt_la-CSD.lo -MD -MP -MF src/libdcs/$(DEPDIR)/libhdt_la-CSD.Tpo -c -o src/libdcs/libhdt_la-CSD.lo `test -f 'src/libdcs/CSD.cpp' || echo '$(srcdir)/'`src/libdcs/CSD.cpp
	$(AM_V_at)$(am__mv) src/libdcs/$(DEPDIR)/libhdt_la-CSD.Tpo src/libdcs/$(DEPDIR)/libhdt_la-CSD.Plo
#	$(AM_V_CXX)source='src/libdcs/CSD.cpp' object='src/libdcs/libhdt_la-CSD.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libdcs/libhdt_la-CSD.lo `test -f 'src/libdcs/CSD.cpp' || echo '$(srcdir)/'`src/libdcs/CSD.cpp

src/libdcs/libhdt_la-CSD_FMIndex.lo: src/libdcs/CSD_FMIndex.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libdcs/libhdt_la-CSD_FMIndex.lo -MD -MP -MF src/libdcs/$(DEPDIR)/libhdt_la-CSD_FMIndex.Tpo -c -o src/libdcs/libhdt_la-CSD_FMIndex.lo `test -f 'src/libdcs/CSD_FMIndex.cpp' || echo '$(srcdir)/'`src/libdcs/CSD_FMIndex.cpp
	$(AM_V_at)$(am__mv) src/libdcs/$(DEPDIR)/libhdt_la-CSD_FMIndex.Tpo src/libdcs/$(DEPDIR)/libhdt_la-CSD_FMIndex.Plo
#	$(AM_V_CXX)source='src/libdcs/CSD_FMIndex.cpp' object='src/libdcs/libhdt_la-CSD_FMIndex.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libdcs/libhdt_la-CSD_FMIndex.lo `test -f 'src/libdcs/CSD_FMIndex.cpp' || echo '$(srcdir)/'`src/libdcs/CSD_FMIndex.cpp

src/libdcs/libhdt_la-CSD_HTFC.lo: src/libdcs/CSD_HTFC.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libdcs/libhdt_la-CSD_HTFC.lo -MD -MP -MF src/libdcs/$(DEPDIR)/libhdt_la-CSD_HTFC.Tpo -c -o src/libdcs/libhdt_la-CSD_HTFC.lo `test -f 'src/libdcs/CSD_HTFC.cpp' || echo '$(srcdir)/'`src/libdcs/CSD_HTFC.cpp
	$(AM_V_at)$(am__mv) src/libdcs/$(DEPDIR)/libhdt_la-CSD_HTFC.Tpo src/libdcs/$(DEPDIR)/libhdt_la-CSD_HTFC.Plo
#	$(AM_V_CXX)source='src/libdcs/CSD_HTFC.cpp' object='src/libdcs/libhdt_la-CSD_HTFC.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libdcs/libhdt_la-CSD_HTFC.lo `test -f 'src/libdcs/CSD_HTFC.cpp' || echo '$(srcdir)/'`src/libdcs/CSD_HTFC.cpp

src/libdcs/libhdt_la-CSD_PFC.lo: src/libdcs/CSD_PFC.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libdcs/libhdt_la-CSD_PFC.lo -MD -MP -MF src/libdcs/$(DEPDIR)/libhdt_la-CSD_PFC.Tpo -c -o src/libdcs/libhdt_la-CSD_PFC.lo `test -f 'src/libdcs/CSD_PFC.cpp' || echo '$(srcdir)/'`src/libdcs/CSD_PFC.cpp
	$(AM_V_at)$(am__mv) src/libdcs/$(DEPDIR)/libhdt_la-CSD_PFC.Tpo src/libdcs/$(DEPDIR)/libhdt_la-CSD_PFC.Plo
#	$(AM_V_CXX)source='src/libdcs/CSD_PFC.cpp' object='src/libdcs/libhdt_la-CSD_PFC.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libdcs/libhdt_la-CSD_PFC.lo `test -f 'src/libdcs/CSD_PFC.cpp' || echo '$(srcdir)/'`src/libdcs/CSD_PFC.cpp

src/libdcs/libhdt_la-VByte.lo: src/libdcs/VByte.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libdcs/libhdt_la-VByte.lo -MD -MP -MF src/libdcs/$(DEPDIR)/libhdt_la-VByte.Tpo -c -o src/libdcs/libhdt_la-VByte.lo `test -f 'src/libdcs/VByte.cpp' || echo '$(srcdir)/'`src/libdcs/VByte.cpp
	$(AM_V_at)$(am__mv) src/libdcs/$(DEPDIR)/libhdt_la-VByte.Tpo src/libdcs/$(DEPDIR)/libhdt_la-VByte.Plo
#	$(AM_V_CXX)source='src/libdcs/VByte.cpp' object='src/libdcs/libhdt_la-VByte.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libdcs/libhdt_la-VByte.lo `test -f 'src/libdcs/VByte.cpp' || echo '$(srcdir)/'`src/libdcs/VByte.cpp

src/libdcs/fmindex/libhdt_la-SSA.lo: src/libdcs/fmindex/SSA.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libdcs/fmindex/libhdt_la-SSA.lo -MD -MP -MF src/libdcs/fmindex/$(DEPDIR)/libhdt_la-SSA.Tpo -c -o src/libdcs/fmindex/libhdt_la-SSA.lo `test -f 'src/libdcs/fmindex/SSA.cpp' || echo '$(srcdir)/'`src/libdcs/fmindex/SSA.cpp
	$(AM_V_at)$(am__mv) src/libdcs/fmindex/$(DEPDIR)/libhdt_la-SSA.Tpo src/libdcs/fmindex/$(DEPDIR)/libhdt_la-SSA.Plo
#	$(AM_V_CXX)source='src/libdcs/fmindex/SSA.cpp' object='src/libdcs/fmindex/libhdt_la-SSA.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libdcs/fmindex/libhdt_la-SSA.lo `test -f 'src/libdcs/fmindex/SSA.cpp' || echo '$(srcdir)/'`src/libdcs/fmindex/SSA.cpp

src/libdcs/fmindex/libhdt_la-SuffixArray.lo: src/libdcs/fmindex/SuffixArray.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libdcs/fmindex/libhdt_la-SuffixArray.lo -MD -MP -MF src/libdcs/fmindex/$(DEPDIR)/libhdt_la-SuffixArray.Tpo -c -o src/libdcs/fmindex/libhdt_la-SuffixArray.lo `test -f 'src/libdcs/fmindex/SuffixArray.cpp' || echo '$(srcdir)/'`src/libdcs/fmindex/SuffixArray.cpp
	$(AM_V_at)$(am__mv) src/libdcs/fmindex/$(DEPDIR)/libhdt_la-SuffixArray.Tpo src/libdcs/fmindex/$(DEPDIR)/libhdt_la-SuffixArray.Plo
#	$(AM_V_CXX)source='src/libdcs/fmindex/SuffixArray.cpp' object='src/libdcs/fmindex/libhdt_la-SuffixArray.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libdcs/fmindex/libhdt_la-SuffixArray.lo `test -f 'src/libdcs/fmindex/SuffixArray.cpp' || echo '$(srcdir)/'`src/libdcs/fmindex/SuffixArray.cpp

src/rdf/libhdt_la-RDFParser.lo: src/rdf/RDFParser.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/rdf/libhdt_la-RDFParser.lo -MD -MP -MF src/rdf/$(DEPDIR)/libhdt_la-RDFParser.Tpo -c -o src/rdf/libhdt_la-RDFParser.lo `test -f 'src/rdf/RDFParser.cpp' || echo '$(srcdir)/'`src/rdf/RDFParser.cpp
	$(AM_V_at)$(am__mv) src/rdf/$(DEPDIR)/libhdt_la-RDFParser.Tpo src/rdf/$(DEPDIR)/libhdt_la-RDFParser.Plo
#	$(AM_V_CXX)source='src/rdf/RDFParser.cpp' object='src/rdf/libhdt_la-RDFParser.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/rdf/libhdt_la-RDFParser.lo `test -f 'src/rdf/RDFParser.cpp' || echo '$(srcdir)/'`src/rdf/RDFParser.cpp

src/rdf/libhdt_la-RDFParserNtriples.lo: src/rdf/RDFParserNtriples.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/rdf/libhdt_la-RDFParserNtriples.lo -MD -MP -MF src/rdf/$(DEPDIR)/libhdt_la-RDFParserNtriples.Tpo -c -o src/rdf/libhdt_la-RDFParserNtriples.lo `test -f 'src/rdf/RDFParserNtriples.cpp' || echo '$(srcdir)/'`src/rdf/RDFParserNtriples.cpp
	$(AM_V_at)$(am__mv) src/rdf/$(DEPDIR)/libhdt_la-RDFParserNtriples.Tpo src/rdf/$(DEPDIR)/libhdt_la-RDFParserNtriples.Plo
#	$(AM_V_CXX)source='src/rdf/RDFParserNtriples.cpp' object='src/rdf/libhdt_la-RDFParserNtriples.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/rdf/libhdt_la-RDFParserNtriples.lo `test -f 'src/rdf/RDFParserNtriples.cpp' || echo '$(srcdir)/'`src/rdf/RDFParserNtriples.cpp

src/rdf/libhdt_la-RDFParserSerd.lo: src/rdf/RDFParserSerd.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/rdf/libhdt_la-RDFParserSerd.lo -MD -MP -MF src/rdf/$(DEPDIR)/libhdt_la-RDFParserSerd.Tpo -c -o src/rdf/libhdt_la-RDFParserSerd.lo `test -f 'src/rdf/RDFParserSerd.cpp' || echo '$(srcdir)/'`src/rdf/RDFParserSerd.cpp
	$(AM_V_at)$(am__mv) src/rdf/$(DEPDIR)/libhdt_la-RDFParserSerd.Tpo src/rdf/$(DEPDIR)/libhdt_la-RDFParserSerd.Plo
#	$(AM_V_CXX)source='src/rdf/RDFParserSerd.cpp' object='src/rdf/libhdt_la-RDFParserSerd.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/rdf/libhdt_la-RDFParserSerd.lo `test -f 'src/rdf/RDFParserSerd.cpp' || echo '$(srcdir)/'`src/rdf/RDFParserSerd.cpp

src/rdf/libhdt_la-RDFSerializer.lo: src/rdf/RDFSerializer.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/rdf/libhdt_la-RDFSerializer.lo -MD -MP -MF src/rdf/$(DEPDIR)/libhdt_la-RDFSerializer.Tpo -c -o src/rdf/libhdt_la-RDFSerializer.lo `test -f 'src/rdf/RDFSerializer.cpp' || echo '$(srcdir)/'`src/rdf/RDFSerializer.cpp
	$(AM_V_at)$(am__mv) src/rdf/$(DEPDIR)/libhdt_la-RDFSerializer.Tpo src/rdf/$(DEPDIR)/libhdt_la-RDFSerializer.Plo
#	$(AM_V_CXX)source='src/rdf/RDFSerializer.cpp' object='src/rdf/libhdt_la-RDFSerializer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/rdf/libhdt_la-RDFSerializer.lo `test -f 'src/rdf/RDFSerializer.cpp' || echo '$(srcdir)/'`src/rdf/RDFSerializer.cpp

src/rdf/libhdt_la-RDFSerializerNTriples.lo: src/rdf/RDFSerializerNTriples.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/rdf/libhdt_la-RDFSerializerNTriples.lo -MD -MP -MF src/rdf/$(DEPDIR)/libhdt_la-RDFSerializerNTriples.Tpo -c -o src/rdf/libhdt_la-RDFSerializerNTriples.lo `test -f 'src/rdf/RDFSerializerNTriples.cpp' || echo '$(srcdir)/'`src/rdf/RDFSerializerNTriples.cpp
	$(AM_V_at)$(am__mv) src/rdf/$(DEPDIR)/libhdt_la-RDFSerializerNTriples.Tpo src/rdf/$(DEPDIR)/libhdt_la-RDFSerializerNTriples.Plo
#	$(AM_V_CXX)source='src/rdf/RDFSerializerNTriples.cpp' object='src/rdf/libhdt_la-RDFSerializerNTriples.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/rdf/libhdt_la-RDFSerializerNTriples.lo `test -f 'src/rdf/RDFSerializerNTriples.cpp' || echo '$(srcdir)/'`src/rdf/RDFSerializerNTriples.cpp

src/rdf/libhdt_la-RDFSerializerSerd.lo: src/rdf/RDFSerializerSerd.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/rdf/libhdt_la-RDFSerializerSerd.lo -MD -MP -MF src/rdf/$(DEPDIR)/libhdt_la-RDFSerializerSerd.Tpo -c -o src/rdf/libhdt_la-RDFSerializerSerd.lo `test -f 'src/rdf/RDFSerializerSerd.cpp' || echo '$(srcdir)/'`src/rdf/RDFSerializerSerd.cpp
	$(AM_V_at)$(am__mv) src/rdf/$(DEPDIR)/libhdt_la-RDFSerializerSerd.Tpo src/rdf/$(DEPDIR)/libhdt_la-RDFSerializerSerd.Plo
#	$(AM_V_CXX)source='src/rdf/RDFSerializerSerd.cpp' object='src/rdf/libhdt_la-RDFSerializerSerd.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/rdf/libhdt_la-RDFSerializerSerd.lo `test -f 'src/rdf/RDFSerializerSerd.cpp' || echo '$(srcdir)/'`src/rdf/RDFSerializerSerd.cpp

src/sequence/libhdt_la-AdjacencyList.lo: src/sequence/AdjacencyList.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/sequence/libhdt_la-AdjacencyList.lo -MD -MP -MF src/sequence/$(DEPDIR)/libhdt_la-AdjacencyList.Tpo -c -o src/sequence/libhdt_la-AdjacencyList.lo `test -f 'src/sequence/AdjacencyList.cpp' || echo '$(srcdir)/'`src/sequence/AdjacencyList.cpp
	$(AM_V_at)$(am__mv) src/sequence/$(DEPDIR)/libhdt_la-AdjacencyList.Tpo src/sequence/$(DEPDIR)/libhdt_la-AdjacencyList.Plo
#	$(AM_V_CXX)source='src/sequence/AdjacencyList.cpp' object='src/sequence/libhdt_la-AdjacencyList.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/sequence/libhdt_la-AdjacencyList.lo `test -f 'src/sequence/AdjacencyList.cpp' || echo '$(srcdir)/'`src/sequence/AdjacencyList.cpp

src/sequence/libhdt_la-ArraySequence.lo: src/sequence/ArraySequence.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/sequence/libhdt_la-ArraySequence.lo -MD -MP -MF src/sequence/$(DEPDIR)/libhdt_la-ArraySequence.Tpo -c -o src/sequence/libhdt_la-ArraySequence.lo `test -f 'src/sequence/ArraySequence.cpp' || echo '$(srcdir)/'`src/sequence/ArraySequence.cpp
	$(AM_V_at)$(am__mv) src/sequence/$(DEPDIR)/libhdt_la-ArraySequence.Tpo src/sequence/$(DEPDIR)/libhdt_la-ArraySequence.Plo
#	$(AM_V_CXX)source='src/sequence/ArraySequence.cpp' object='src/sequence/libhdt_la-ArraySequence.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/sequence/libhdt_la-ArraySequence.lo `test -f 'src/sequence/ArraySequence.cpp' || echo '$(srcdir)/'`src/sequence/ArraySequence.cpp

src/sequence/libhdt_la-HuffmanSequence.lo: src/sequence/HuffmanSequence.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/sequence/libhdt_la-HuffmanSequence.lo -MD -MP -MF src/sequence/$(DEPDIR)/libhdt_la-HuffmanSequence.Tpo -c -o src/sequence/libhdt_la-HuffmanSequence.lo `test -f 'src/sequence/HuffmanSequence.cpp' || echo '$(srcdir)/'`src/sequence/HuffmanSequence.cpp
	$(AM_V_at)$(am__mv) src/sequence/$(DEPDIR)/libhdt_la-HuffmanSequence.Tpo src/sequence/$(DEPDIR)/libhdt_la-HuffmanSequence.Plo
#	$(AM_V_CXX)source='src/sequence/HuffmanSequence.cpp' object='src/sequence/libhdt_la-HuffmanSequence.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/sequence/libhdt_la-HuffmanSequence.lo `test -f 'src/sequence/HuffmanSequence.cpp' || echo '$(srcdir)/'`src/sequence/HuffmanSequence.cpp

src/sequence/libhdt_la-IntSequence.lo: src/sequence/IntSequence.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/sequence/libhdt_la-IntSequence.lo -MD -MP -MF src/sequence/$(DEPDIR)/libhdt_la-IntSequence.Tpo -c -o src/sequence/libhdt_la-IntSequence.lo `test -f 'src/sequence/IntSequence.cpp' || echo '$(srcdir)/'`src/sequence/IntSequence.cpp
	$(AM_V_at)$(am__mv) src/sequence/$(DEPDIR)/libhdt_la-IntSequence.Tpo src/sequence/$(DEPDIR)/libhdt_la-IntSequence.Plo
#	$(AM_V_CXX)source='src/sequence/IntSequence.cpp' object='src/sequence/libhdt_la-IntSequence.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/sequence/libhdt_la-IntSequence.lo `test -f 'src/sequence/IntSequence.cpp' || echo '$(srcdir)/'`src/sequence/IntSequence.cpp

src/sequence/libhdt_la-LogSequence2.lo: src/sequence/LogSequence2.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/sequence/libhdt_la-LogSequence2.lo -MD -MP -MF src/sequence/$(DEPDIR)/libhdt_la-LogSequence2.Tpo -c -o src/sequence/libhdt_la-LogSequence2.lo `test -f 'src/sequence/LogSequence2.cpp' || echo '$(srcdir)/'`src/sequence/LogSequence2.cpp
	$(AM_V_at)$(am__mv) src/sequence/$(DEPDIR)/libhdt_la-LogSequence2.Tpo src/sequence/$(DEPDIR)/libhdt_la-LogSequence2.Plo
#	$(AM_V_CXX)source='src/sequence/LogSequence2.cpp' object='src/sequence/libhdt_la-LogSequence2.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/sequence/libhdt_la-LogSequence2.lo `test -f 'src/sequence/LogSequence2.cpp' || echo '$(srcdir)/'`src/sequence/LogSequence2.cpp

src/sequence/libhdt_la-LogSequence.lo: src/sequence/LogSequence.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/sequence/libhdt_la-LogSequence.lo -MD -MP -MF src/sequence/$(DEPDIR)/libhdt_la-LogSequence.Tpo -c -o src/sequence/libhdt_la-LogSequence.lo `test -f 'src/sequence/LogSequence.cpp' || echo '$(srcdir)/'`src/sequence/LogSequence.cpp
	$(AM_V_at)$(am__mv) src/sequence/$(DEPDIR)/libhdt_la-LogSequence.Tpo src/sequence/$(DEPDIR)/libhdt_la-LogSequence.Plo
#	$(AM_V_CXX)source='src/sequence/LogSequence.cpp' object='src/sequence/libhdt_la-LogSequence.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/sequence/libhdt_la-LogSequence.lo `test -f 'src/sequence/LogSequence.cpp' || echo '$(srcdir)/'`src/sequence/LogSequence.cpp

src/sequence/libhdt_la-WaveletSequence.lo: src/sequence/WaveletSequence.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/sequence/libhdt_la-WaveletSequence.lo -MD -MP -MF src/sequence/$(DEPDIR)/libhdt_la-WaveletSequence.Tpo -c -o src/sequence/libhdt_la-WaveletSequence.lo `test -f 'src/sequence/WaveletSequence.cpp' || echo '$(srcdir)/'`src/sequence/WaveletSequence.cpp
	$(AM_V_at)$(am__mv) src/sequence/$(DEPDIR)/libhdt_la-WaveletSequence.Tpo src/sequence/$(DEPDIR)/libhdt_la-WaveletSequence.Plo
#	$(AM_V_CXX)source='src/sequence/WaveletSequence.cpp' object='src/sequence/libhdt_la-WaveletSequence.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/sequence/libhdt_la-WaveletSequence.lo `test -f 'src/sequence/WaveletSequence.cpp' || echo '$(srcdir)/'`src/sequence/WaveletSequence.cpp

src/sparql/libhdt_la-IndexJoinBinding.lo: src/sparql/IndexJoinBinding.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/sparql/libhdt_la-IndexJoinBinding.lo -MD -MP -MF src/sparql/$(DEPDIR)/libhdt_la-IndexJoinBinding.Tpo -c -o src/sparql/libhdt_la-IndexJoinBinding.lo `test -f 'src/sparql/IndexJoinBinding.cpp' || echo '$(srcdir)/'`src/sparql/IndexJoinBinding.cpp
	$(AM_V_at)$(am__mv) src/sparql/$(DEPDIR)/libhdt_la-IndexJoinBinding.Tpo src/sparql/$(DEPDIR)/libhdt_la-IndexJoinBinding.Plo
#	$(AM_V_CXX)source='src/sparql/IndexJoinBinding.cpp' object='src/sparql/libhdt_la-IndexJoinBinding.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/sparql/libhdt_la-IndexJoinBinding.lo `test -f 'src/sparql/IndexJoinBinding.cpp' || echo '$(srcdir)/'`src/sparql/IndexJoinBinding.cpp

src/sparql/libhdt_la-JoinAlgorithms.lo: src/sparql/JoinAlgorithms.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/sparql/libhdt_la-JoinAlgorithms.lo -MD -MP -MF src/sparql/$(DEPDIR)/libhdt_la-JoinAlgorithms.Tpo -c -o src/sparql/libhdt_la-JoinAlgorithms.lo `test -f 'src/sparql/JoinAlgorithms.cpp' || echo '$(srcdir)/'`src/sparql/JoinAlgorithms.cpp
	$(AM_V_at)$(am__mv) src/sparql/$(DEPDIR)/libhdt_la-JoinAlgorithms.Tpo src/sparql/$(DEPDIR)/libhdt_la-JoinAlgorithms.Plo
#	$(AM_V_CXX)source='src/sparql/JoinAlgorithms.cpp' object='src/sparql/libhdt_la-JoinAlgorithms.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/sparql/libhdt_la-JoinAlgorithms.lo `test -f 'src/sparql/JoinAlgorithms.cpp' || echo '$(srcdir)/'`src/sparql/JoinAlgorithms.cpp

src/sparql/libhdt_la-MergeJoinBinding.lo: src/sparql/MergeJoinBinding.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/sparql/libhdt_la-MergeJoinBinding.lo -MD -MP -MF src/sparql/$(DEPDIR)/libhdt_la-MergeJoinBinding.Tpo -c -o src/sparql/libhdt_la-MergeJoinBinding.lo `test -f 'src/sparql/MergeJoinBinding.cpp' || echo '$(srcdir)/'`src/sparql/MergeJoinBinding.cpp
	$(AM_V_at)$(am__mv) src/sparql/$(DEPDIR)/libhdt_la-MergeJoinBinding.Tpo src/sparql/$(DEPDIR)/libhdt_la-MergeJoinBinding.Plo
#	$(AM_V_CXX)source='src/sparql/MergeJoinBinding.cpp' object='src/sparql/libhdt_la-MergeJoinBinding.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/sparql/libhdt_la-MergeJoinBinding.lo `test -f 'src/sparql/MergeJoinBinding.cpp' || echo '$(srcdir)/'`src/sparql/MergeJoinBinding.cpp

src/sparql/libhdt_la-QueryProcessor.lo: src/sparql/QueryProcessor.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/sparql/libhdt_la-QueryProcessor.lo -MD -MP -MF src/sparql/$(DEPDIR)/libhdt_la-QueryProcessor.Tpo -c -o src/sparql/libhdt_la-QueryProcessor.lo `test -f 'src/sparql/QueryProcessor.cpp' || echo '$(srcdir)/'`src/sparql/QueryProcessor.cpp
	$(AM_V_at)$(am__mv) src/sparql/$(DEPDIR)/libhdt_la-QueryProcessor.Tpo src/sparql/$(DEPDIR)/libhdt_la-QueryProcessor.Plo
#	$(AM_V_CXX)source='src/sparql/QueryProcessor.cpp' object='src/sparql/libhdt_la-QueryProcessor.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/sparql/libhdt_la-QueryProcessor.lo `test -f 'src/sparql/QueryProcessor.cpp' || echo '$(srcdir)/'`src/sparql/QueryProcessor.cpp

src/sparql/libhdt_la-SortBinding.lo: src/sparql/SortBinding.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/sparql/libhdt_la-SortBinding.lo -MD -MP -MF src/sparql/$(DEPDIR)/libhdt_la-SortBinding.Tpo -c -o src/sparql/libhdt_la-SortBinding.lo `test -f 'src/sparql/SortBinding.cpp' || echo '$(srcdir)/'`src/sparql/SortBinding.cpp
	$(AM_V_at)$(am__mv) src/sparql/$(DEPDIR)/libhdt_la-SortBinding.Tpo src/sparql/$(DEPDIR)/libhdt_la-SortBinding.Plo
#	$(AM_V_CXX)source='src/sparql/SortBinding.cpp' object='src/sparql/libhdt_la-SortBinding.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/sparql/libhdt_la-SortBinding.lo `test -f 'src/sparql/SortBinding.cpp' || echo '$(srcdir)/'`src/sparql/SortBinding.cpp

src/sparql/libhdt_la-TriplePatternBinding.lo: src/sparql/TriplePatternBinding.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/sparql/libhdt_la-TriplePatternBinding.lo -MD -MP -MF src/sparql/$(DEPDIR)/libhdt_la-TriplePatternBinding.Tpo -c -o src/sparql/libhdt_la-TriplePatternBinding.lo `test -f 'src/sparql/TriplePatternBinding.cpp' || echo '$(srcdir)/'`src/sparql/TriplePatternBinding.cpp
	$(AM_V_at)$(am__mv) src/sparql/$(DEPDIR)/libhdt_la-TriplePatternBinding.Tpo src/sparql/$(DEPDIR)/libhdt_la-TriplePatternBinding.Plo
#	$(AM_V_CXX)source='src/sparql/TriplePatternBinding.cpp' object='src/sparql/libhdt_la-TriplePatternBinding.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/sparql/libhdt_la-TriplePatternBinding.lo `test -f 'src/sparql/TriplePatternBinding.cpp' || echo '$(srcdir)/'`src/sparql/TriplePatternBinding.cpp

src/triples/libhdt_la-BitmapTriples.lo: src/triples/BitmapTriples.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/triples/libhdt_la-BitmapTriples.lo -MD -MP -MF src/triples/$(DEPDIR)/libhdt_la-BitmapTriples.Tpo -c -o src/triples/libhdt_la-BitmapTriples.lo `test -f 'src/triples/BitmapTriples.cpp' || echo '$(srcdir)/'`src/triples/BitmapTriples.cpp
	$(AM_V_at)$(am__mv) src/triples/$(DEPDIR)/libhdt_la-BitmapTriples.Tpo src/triples/$(DEPDIR)/libhdt_la-BitmapTriples.Plo
#	$(AM_V_CXX)source='src/triples/BitmapTriples.cpp' object='src/triples/libhdt_la-BitmapTriples.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/triples/libhdt_la-BitmapTriples.lo `test -f 'src/triples/BitmapTriples.cpp' || echo '$(srcdir)/'`src/triples/BitmapTriples.cpp

src/triples/libhdt_la-BitmapTriplesIterators.lo: src/triples/BitmapTriplesIterators.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/triples/libhdt_la-BitmapTriplesIterators.lo -MD -MP -MF src/triples/$(DEPDIR)/libhdt_la-BitmapTriplesIterators.Tpo -c -o src/triples/libhdt_la-BitmapTriplesIterators.lo `test -f 'src/triples/BitmapTriplesIterators.cpp' || echo '$(srcdir)/'`src/triples/BitmapTriplesIterators.cpp
	$(AM_V_at)$(am__mv) src/triples/$(DEPDIR)/libhdt_la-BitmapTriplesIterators.Tpo src/triples/$(DEPDIR)/libhdt_la-BitmapTriplesIterators.Plo
#	$(AM_V_CXX)source='src/triples/BitmapTriplesIterators.cpp' object='src/triples/libhdt_la-BitmapTriplesIterators.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/triples/libhdt_la-BitmapTriplesIterators.lo `test -f 'src/triples/BitmapTriplesIterators.cpp' || echo '$(srcdir)/'`src/triples/BitmapTriplesIterators.cpp

src/triples/libhdt_la-PlainTriples.lo: src/triples/PlainTriples.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/triples/libhdt_la-PlainTriples.lo -MD -MP -MF src/triples/$(DEPDIR)/libhdt_la-PlainTriples.Tpo -c -o src/triples/libhdt_la-PlainTriples.lo `test -f 'src/triples/PlainTriples.cpp' || echo '$(srcdir)/'`src/triples/PlainTriples.cpp
	$(AM_V_at)$(am__mv) src/triples/$(DEPDIR)/libhdt_la-PlainTriples.Tpo src/triples/$(DEPDIR)/libhdt_la-PlainTriples.Plo
#	$(AM_V_CXX)source='src/triples/PlainTriples.cpp' object='src/triples/libhdt_la-PlainTriples.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/triples/libhdt_la-PlainTriples.lo `test -f 'src/triples/PlainTriples.cpp' || echo '$(srcdir)/'`src/triples/PlainTriples.cpp

src/triples/libhdt_la-predicateindex.lo: src/triples/predicateindex.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/triples/libhdt_la-predicateindex.lo -MD -MP -MF src/triples/$(DEPDIR)/libhdt_la-predicateindex.Tpo -c -o src/triples/libhdt_la-predicateindex.lo `test -f 'src/triples/predicateindex.cpp' || echo '$(srcdir)/'`src/triples/predicateindex.cpp
	$(AM_V_at)$(am__mv) src/triples/$(DEPDIR)/libhdt_la-predicateindex.Tpo src/triples/$(DEPDIR)/libhdt_la-predicateindex.Plo
#	$(AM_V_CXX)source='src/triples/predicateindex.cpp' object='src/triples/libhdt_la-predicateindex.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/triples/libhdt_la-predicateindex.lo `test -f 'src/triples/predicateindex.cpp' || echo '$(srcdir)/'`src/triples/predicateindex.cpp

src/triples/libhdt_la-TripleIterators.lo: src/triples/TripleIterators.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/triples/libhdt_la-TripleIterators.lo -MD -MP -MF src/triples/$(DEPDIR)/libhdt_la-TripleIterators.Tpo -c -o src/triples/libhdt_la-TripleIterators.lo `test -f 'src/triples/TripleIterators.cpp' || echo '$(srcdir)/'`src/triples/TripleIterators.cpp
	$(AM_V_at)$(am__mv) src/triples/$(DEPDIR)/libhdt_la-TripleIterators.Tpo src/triples/$(DEPDIR)/libhdt_la-TripleIterators.Plo
#	$(AM_V_CXX)source='src/triples/TripleIterators.cpp' object='src/triples/libhdt_la-TripleIterators.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/triples/libhdt_la-TripleIterators.lo `test -f 'src/triples/TripleIterators.cpp' || echo '$(srcdir)/'`src/triples/TripleIterators.cpp

src/triples/libhdt_la-TripleListDisk.lo: src/triples/TripleListDisk.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/triples/libhdt_la-TripleListDisk.lo -MD -MP -MF src/triples/$(DEPDIR)/libhdt_la-TripleListDisk.Tpo -c -o src/triples/libhdt_la-TripleListDisk.lo `test -f 'src/triples/TripleListDisk.cpp' || echo '$(srcdir)/'`src/triples/TripleListDisk.cpp
	$(AM_V_at)$(am__mv) src/triples/$(DEPDIR)/libhdt_la-TripleListDisk.Tpo src/triples/$(DEPDIR)/libhdt_la-TripleListDisk.Plo
#	$(AM_V_CXX)source='src/triples/TripleListDisk.cpp' object='src/triples/libhdt_la-TripleListDisk.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/triples/libhdt_la-TripleListDisk.lo `test -f 'src/triples/TripleListDisk.cpp' || echo '$(srcdir)/'`src/triples/TripleListDisk.cpp

src/triples/libhdt_la-TripleOrderConvert.lo: src/triples/TripleOrderConvert.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/triples/libhdt_la-TripleOrderConvert.lo -MD -MP -MF src/triples/$(DEPDIR)/libhdt_la-TripleOrderConvert.Tpo -c -o src/triples/libhdt_la-TripleOrderConvert.lo `test -f 'src/triples/TripleOrderConvert.cpp' || echo '$(srcdir)/'`src/triples/TripleOrderConvert.cpp
	$(AM_V_at)$(am__mv) src/triples/$(DEPDIR)/libhdt_la-TripleOrderConvert.Tpo src/triples/$(DEPDIR)/libhdt_la-TripleOrderConvert.Plo
#	$(AM_V_CXX)source='src/triples/TripleOrderConvert.cpp' object='src/triples/libhdt_la-TripleOrderConvert.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/triples/libhdt_la-TripleOrderConvert.lo `test -f 'src/triples/TripleOrderConvert.cpp' || echo '$(srcdir)/'`src/triples/TripleOrderConvert.cpp

src/triples/libhdt_la-TriplesComparator.lo: src/triples/TriplesComparator.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/triples/libhdt_la-TriplesComparator.lo -MD -MP -MF src/triples/$(DEPDIR)/libhdt_la-TriplesComparator.Tpo -c -o src/triples/libhdt_la-TriplesComparator.lo `test -f 'src/triples/TriplesComparator.cpp' || echo '$(srcdir)/'`src/triples/TriplesComparator.cpp
	$(AM_V_at)$(am__mv) src/triples/$(DEPDIR)/libhdt_la-TriplesComparator.Tpo src/triples/$(DEPDIR)/libhdt_la-TriplesComparator.Plo
#	$(AM_V_CXX)source='src/triples/TriplesComparator.cpp' object='src/triples/libhdt_la-TriplesComparator.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/triples/libhdt_la-TriplesComparator.lo `test -f 'src/triples/TriplesComparator.cpp' || echo '$(srcdir)/'`src/triples/TriplesComparator.cpp

src/triples/libhdt_la-TriplesKyoto.lo: src/triples/TriplesKyoto.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/triples/libhdt_la-TriplesKyoto.lo -MD -MP -MF src/triples/$(DEPDIR)/libhdt_la-TriplesKyoto.Tpo -c -o src/triples/libhdt_la-TriplesKyoto.lo `test -f 'src/triples/TriplesKyoto.cpp' || echo '$(srcdir)/'`src/triples/TriplesKyoto.cpp
	$(AM_V_at)$(am__mv) src/triples/$(DEPDIR)/libhdt_la-TriplesKyoto.Tpo src/triples/$(DEPDIR)/libhdt_la-TriplesKyoto.Plo
#	$(AM_V_CXX)source='src/triples/TriplesKyoto.cpp' object='src/triples/libhdt_la-TriplesKyoto.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/triples/libhdt_la-TriplesKyoto.lo `test -f 'src/triples/TriplesKyoto.cpp' || echo '$(srcdir)/'`src/triples/TriplesKyoto.cpp

src/triples/libhdt_la-TriplesList.lo: src/triples/TriplesList.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/triples/libhdt_la-TriplesList.lo -MD -MP -MF src/triples/$(DEPDIR)/libhdt_la-TriplesList.Tpo -c -o src/triples/libhdt_la-TriplesList.lo `test -f 'src/triples/TriplesList.cpp' || echo '$(srcdir)/'`src/triples/TriplesList.cpp
	$(AM_V_at)$(am__mv) src/triples/$(DEPDIR)/libhdt_la-TriplesList.Tpo src/triples/$(DEPDIR)/libhdt_la-TriplesList.Plo
#	$(AM_V_CXX)source='src/triples/TriplesList.cpp' object='src/triples/libhdt_la-TriplesList.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/triples/libhdt_la-TriplesList.lo `test -f 'src/triples/TriplesList.cpp' || echo '$(srcdir)/'`src/triples/TriplesList.cpp

src/util/libhdt_la-bitutil.lo: src/util/bitutil.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/util/libhdt_la-bitutil.lo -MD -MP -MF src/util/$(DEPDIR)/libhdt_la-bitutil.Tpo -c -o src/util/libhdt_la-bitutil.lo `test -f 'src/util/bitutil.cpp' || echo '$(srcdir)/'`src/util/bitutil.cpp
	$(AM_V_at)$(am__mv) src/util/$(DEPDIR)/libhdt_la-bitutil.Tpo src/util/$(DEPDIR)/libhdt_la-bitutil.Plo
#	$(AM_V_CXX)source='src/util/bitutil.cpp' object='src/util/libhdt_la-bitutil.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/util/libhdt_la-bitutil.lo `test -f 'src/util/bitutil.cpp' || echo '$(srcdir)/'`src/util/bitutil.cpp

src/util/libhdt_la-crc16.lo: src/util/crc16.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/util/libhdt_la-crc16.lo -MD -MP -MF src/util/$(DEPDIR)/libhdt_la-crc16.Tpo -c -o src/util/libhdt_la-crc16.lo `test -f 'src/util/crc16.cpp' || echo '$(srcdir)/'`src/util/crc16.cpp
	$(AM_V_at)$(am__mv) src/util/$(DEPDIR)/libhdt_la-crc16.Tpo src/util/$(DEPDIR)/libhdt_la-crc16.Plo
#	$(AM_V_CXX)source='src/util/crc16.cpp' object='src/util/libhdt_la-crc16.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/util/libhdt_la-crc16.lo `test -f 'src/util/crc16.cpp' || echo '$(srcdir)/'`src/util/crc16.cpp

src/util/libhdt_la-crc32.lo: src/util/crc32.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/util/libhdt_la-crc32.lo -MD -MP -MF src/util/$(DEPDIR)/libhdt_la-crc32.Tpo -c -o src/util/libhdt_la-crc32.lo `test -f 'src/util/crc32.cpp' || echo '$(srcdir)/'`src/util/crc32.cpp
	$(AM_V_at)$(am__mv) src/util/$(DEPDIR)/libhdt_la-crc32.Tpo src/util/$(DEPDIR)/libhdt_la-crc32.Plo
#	$(AM_V_CXX)source='src/util/crc32.cpp' object='src/util/libhdt_la-crc32.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/util/libhdt_la-crc32.lo `test -f 'src/util/crc32.cpp' || echo '$(srcdir)/'`src/util/crc32.cpp

src/util/libhdt_la-crc8.lo: src/util/crc8.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/util/libhdt_la-crc8.lo -MD -MP -MF src/util/$(DEPDIR)/libhdt_la-crc8.Tpo -c -o src/util/libhdt_la-crc8.lo `test -f 'src/util/crc8.cpp' || echo '$(srcdir)/'`src/util/crc8.cpp
	$(AM_V_at)$(am__mv) src/util/$(DEPDIR)/libhdt_la-crc8.Tpo src/util/$(DEPDIR)/libhdt_la-crc8.Plo
#	$(AM_V_CXX)source='src/util/crc8.cpp' object='src/util/libhdt_la-crc8.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/util/libhdt_la-crc8.lo `test -f 'src/util/crc8.cpp' || echo '$(srcdir)/'`src/util/crc8.cpp

src/util/libhdt_la-filemap.lo: src/util/filemap.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/util/libhdt_la-filemap.lo -MD -MP -MF src/util/$(DEPDIR)/libhdt_la-filemap.Tpo -c -o src/util/libhdt_la-filemap.lo `test -f 'src/util/filemap.cpp' || echo '$(srcdir)/'`src/util/filemap.cpp
	$(AM_V_at)$(am__mv) src/util/$(DEPDIR)/libhdt_la-filemap.Tpo src/util/$(DEPDIR)/libhdt_la-filemap.Plo
#	$(AM_V_CXX)source='src/util/filemap.cpp' object='src/util/libhdt_la-filemap.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/util/libhdt_la-filemap.lo `test -f 'src/util/filemap.cpp' || echo '$(srcdir)/'`src/util/filemap.cpp

src/util/libhdt_la-fileUtil.lo: src/util/fileUtil.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/util/libhdt_la-fileUtil.lo -MD -MP -MF src/util/$(DEPDIR)/libhdt_la-fileUtil.Tpo -c -o src/util/libhdt_la-fileUtil.lo `test -f 'src/util/fileUtil.cpp' || echo '$(srcdir)/'`src/util/fileUtil.cpp
	$(AM_V_at)$(am__mv) src/util/$(DEPDIR)/libhdt_la-fileUtil.Tpo src/util/$(DEPDIR)/libhdt_la-fileUtil.Plo
#	$(AM_V_CXX)source='src/util/fileUtil.cpp' object='src/util/libhdt_la-fileUtil.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/util/libhdt_la-fileUtil.lo `test -f 'src/util/fileUtil.cpp' || echo '$(srcdir)/'`src/util/fileUtil.cpp

src/util/libhdt_la-propertyutil.lo: src/util/propertyutil.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/util/libhdt_la-propertyutil.lo -MD -MP -MF src/util/$(DEPDIR)/libhdt_la-propertyutil.Tpo -c -o src/util/libhdt_la-propertyutil.lo `test -f 'src/util/propertyutil.cpp' || echo '$(srcdir)/'`src/util/propertyutil.cpp
	$(AM_V_at)$(am__mv) src/util/$(DEPDIR)/libhdt_la-propertyutil.Tpo src/util/$(DEPDIR)/libhdt_la-propertyutil.Plo
#	$(AM_V_CXX)source='src/util/propertyutil.cpp' object='src/util/libhdt_la-propertyutil.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/util/libhdt_la-propertyutil.lo `test -f 'src/util/propertyutil.cpp' || echo '$(srcdir)/'`src/util/propertyutil.cpp

src/util/libhdt_la-StopWatch.lo: src/util/StopWatch.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/util/libhdt_la-StopWatch.lo -MD -MP -MF src/util/$(DEPDIR)/libhdt_la-StopWatch.Tpo -c -o src/util/libhdt_la-StopWatch.lo `test -f 'src/util/StopWatch.cpp' || echo '$(srcdir)/'`src/util/StopWatch.cpp
	$(AM_V_at)$(am__mv) src/util/$(DEPDIR)/libhdt_la-StopWatch.Tpo src/util/$(DEPDIR)/libhdt_la-StopWatch.Plo
#	$(AM_V_CXX)source='src/util/StopWatch.cpp' object='src/util/libhdt_la-StopWatch.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/util/libhdt_la-StopWatch.lo `test -f 'src/util/StopWatch.cpp' || echo '$(srcdir)/'`src/util/StopWatch.cpp

third/libhdt_la-gzstream.lo: third/gzstream.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT third/libhdt_la-gzstream.lo -MD -MP -MF third/$(DEPDIR)/libhdt_la-gzstream.Tpo -c -o third/libhdt_la-gzstream.lo `test -f 'third/gzstream.cpp' || echo '$(srcdir)/'`third/gzstream.cpp
	$(AM_V_at)$(am__mv) third/$(DEPDIR)/libhdt_la-gzstream.Tpo third/$(DEPDIR)/libhdt_la-gzstream.Plo
#	$(AM_V_CXX)source='third/gzstream.cpp' object='third/libhdt_la-gzstream.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o third/libhdt_la-gzstream.lo `test -f 'third/gzstream.cpp' || echo '$(srcdir)/'`third/gzstream.cpp

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf src/bitsequence/.libs src/bitsequence/_libs
	-rm -rf src/dictionary/.libs src/dictionary/_libs
	-rm -rf src/hdt/.libs src/hdt/_libs
	-rm -rf src/header/.libs src/header/_libs
	-rm -rf src/huffman/.libs src/huffman/_libs
	-rm -rf src/libdcs/.libs src/libdcs/_libs
	-rm -rf src/libdcs/fmindex/.libs src/libdcs/fmindex/_libs
	-rm -rf src/rdf/.libs src/rdf/_libs
	-rm -rf src/sequence/.libs src/sequence/_libs
	-rm -rf src/sparql/.libs src/sparql/_libs
	-rm -rf src/triples/.libs src/triples/_libs
	-rm -rf src/util/.libs src/util/_libs
	-rm -rf third/.libs third/_libs
install-pkgconfigDATA: $(pkgconfig_DATA)
	@$(NORMAL_INSTALL)
	@list='$(pkgconfig_DATA)'; test -n "$(pkgconfigdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgconfigdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgconfigdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pkgconfigdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pkgconfigdir)" || exit $$?; \
	done

uninstall-pkgconfigDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(pkgconfig_DATA)'; test -n "$(pkgconfigdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkgconfigdir)'; $(am__uninstall_files_from_dir)
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(includedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(includedir)" || exit $$?; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(includedir)'; $(am__uninstall_files_from_dir)

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(LTLIBRARIES) $(DATA) $(HEADERS)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(pkgconfigdir)" "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f src/bitsequence/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/bitsequence/$(am__dirstamp)
	-rm -f src/dictionary/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/dictionary/$(am__dirstamp)
	-rm -f src/hdt/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/hdt/$(am__dirstamp)
	-rm -f src/header/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/header/$(am__dirstamp)
	-rm -f src/huffman/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/huffman/$(am__dirstamp)
	-rm -f src/libdcs/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/libdcs/$(am__dirstamp)
	-rm -f src/libdcs/fmindex/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/libdcs/fmindex/$(am__dirstamp)
	-rm -f src/rdf/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/rdf/$(am__dirstamp)
	-rm -f src/sequence/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/sequence/$(am__dirstamp)
	-rm -f src/sparql/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/sparql/$(am__dirstamp)
	-rm -f src/triples/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/triples/$(am__dirstamp)
	-rm -f src/util/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/util/$(am__dirstamp)
	-rm -f third/$(DEPDIR)/$(am__dirstamp)
	-rm -f third/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-recursive
	-rm -rf src/bitsequence/$(DEPDIR) src/dictionary/$(DEPDIR) src/hdt/$(DEPDIR) src/header/$(DEPDIR) src/huffman/$(DEPDIR) src/libdcs/$(DEPDIR) src/libdcs/fmindex/$(DEPDIR) src/rdf/$(DEPDIR) src/sequence/$(DEPDIR) src/sparql/$(DEPDIR) src/triples/$(DEPDIR) src/util/$(DEPDIR) third/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am: install-includeHEADERS install-pkgconfigDATA

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-libLTLIBRARIES

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf src/bitsequence/$(DEPDIR) src/dictionary/$(DEPDIR) src/hdt/$(DEPDIR) src/header/$(DEPDIR) src/huffman/$(DEPDIR) src/libdcs/$(DEPDIR) src/libdcs/fmindex/$(DEPDIR) src/rdf/$(DEPDIR) src/sequence/$(DEPDIR) src/sparql/$(DEPDIR) src/triples/$(DEPDIR) src/util/$(DEPDIR) third/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-includeHEADERS uninstall-libLTLIBRARIES \
	uninstall-pkgconfigDATA

.MAKE: $(am__recursive_targets) install-am install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am check \
	check-am clean clean-generic clean-libLTLIBRARIES \
	clean-libtool cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-includeHEADERS install-info \
	install-info-am install-libLTLIBRARIES install-man install-pdf \
	install-pdf-am install-pkgconfigDATA install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	installdirs-am maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags tags-am uninstall \
	uninstall-am uninstall-includeHEADERS uninstall-libLTLIBRARIES \
	uninstall-pkgconfigDATA

.PRECIOUS: Makefile


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
